ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_2_Enable,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_2_Enable
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_2_Enable, %function
  23              	PWM_2_Enable:
  24              	.LFB4:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_2.c"
   1:.\Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_2.c **** * File Name: PWM_2.c
   3:.\Generated_Source\PSoC4/PWM_2.c **** * Version 3.30
   4:.\Generated_Source\PSoC4/PWM_2.c **** *
   5:.\Generated_Source\PSoC4/PWM_2.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_2.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/PWM_2.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/PWM_2.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/PWM_2.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/PWM_2.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/PWM_2.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/PWM_2.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/PWM_2.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/PWM_2.c **** *
  15:.\Generated_Source\PSoC4/PWM_2.c **** * Note:
  16:.\Generated_Source\PSoC4/PWM_2.c **** *
  17:.\Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/PWM_2.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/PWM_2.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/PWM_2.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/PWM_2.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/PWM_2.c **** 
  24:.\Generated_Source\PSoC4/PWM_2.c **** #include "PWM_2.h"
  25:.\Generated_Source\PSoC4/PWM_2.c **** 
  26:.\Generated_Source\PSoC4/PWM_2.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC4/PWM_2.c **** #ifdef PWM_2_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/PWM_2.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/PWM_2.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* PWM_2_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/PWM_2.c **** 
  32:.\Generated_Source\PSoC4/PWM_2.c **** uint8 PWM_2_initVar = 0u;
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 2


  33:.\Generated_Source\PSoC4/PWM_2.c **** 
  34:.\Generated_Source\PSoC4/PWM_2.c **** 
  35:.\Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_Start
  37:.\Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/PWM_2.c **** *
  39:.\Generated_Source\PSoC4/PWM_2.c **** * Summary:
  40:.\Generated_Source\PSoC4/PWM_2.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/PWM_2.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/PWM_2.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/PWM_2.c **** *
  44:.\Generated_Source\PSoC4/PWM_2.c **** * Parameters:
  45:.\Generated_Source\PSoC4/PWM_2.c **** *  None
  46:.\Generated_Source\PSoC4/PWM_2.c **** *
  47:.\Generated_Source\PSoC4/PWM_2.c **** * Return:
  48:.\Generated_Source\PSoC4/PWM_2.c **** *  None
  49:.\Generated_Source\PSoC4/PWM_2.c **** *
  50:.\Generated_Source\PSoC4/PWM_2.c **** * Global variables:
  51:.\Generated_Source\PSoC4/PWM_2.c **** *  PWM_2_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/PWM_2.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/PWM_2.c **** *
  54:.\Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/PWM_2.c **** void PWM_2_Start(void) 
  56:.\Generated_Source\PSoC4/PWM_2.c **** {
  57:.\Generated_Source\PSoC4/PWM_2.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/PWM_2.c ****     if(PWM_2_initVar == 0u)
  59:.\Generated_Source\PSoC4/PWM_2.c ****     {
  60:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_Init();
  61:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_initVar = 1u;
  62:.\Generated_Source\PSoC4/PWM_2.c ****     }
  63:.\Generated_Source\PSoC4/PWM_2.c ****     PWM_2_Enable();
  64:.\Generated_Source\PSoC4/PWM_2.c **** 
  65:.\Generated_Source\PSoC4/PWM_2.c **** }
  66:.\Generated_Source\PSoC4/PWM_2.c **** 
  67:.\Generated_Source\PSoC4/PWM_2.c **** 
  68:.\Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_Init
  70:.\Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/PWM_2.c **** *
  72:.\Generated_Source\PSoC4/PWM_2.c **** * Summary:
  73:.\Generated_Source\PSoC4/PWM_2.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/PWM_2.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/PWM_2.c **** *  PWM_2_Start().
  76:.\Generated_Source\PSoC4/PWM_2.c **** *
  77:.\Generated_Source\PSoC4/PWM_2.c **** * Parameters:
  78:.\Generated_Source\PSoC4/PWM_2.c **** *  None
  79:.\Generated_Source\PSoC4/PWM_2.c **** *
  80:.\Generated_Source\PSoC4/PWM_2.c **** * Return:
  81:.\Generated_Source\PSoC4/PWM_2.c **** *  None
  82:.\Generated_Source\PSoC4/PWM_2.c **** *
  83:.\Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/PWM_2.c **** void PWM_2_Init(void) 
  85:.\Generated_Source\PSoC4/PWM_2.c **** {
  86:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UsingFixedFunction || PWM_2_UseControl)
  87:.\Generated_Source\PSoC4/PWM_2.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction || PWM_2_UseControl) */
  89:.\Generated_Source\PSoC4/PWM_2.c **** 
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 3


  90:.\Generated_Source\PSoC4/PWM_2.c ****     #if(!PWM_2_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/PWM_2.c ****         #if(PWM_2_UseStatus)
  92:.\Generated_Source\PSoC4/PWM_2.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/PWM_2.c ****             uint8 PWM_2_interruptState;
  94:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UseStatus) */
  95:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (!PWM_2_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/PWM_2.c **** 
  97:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/PWM_2.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_CONTROL |= PWM_2_CFG0_MODE;
 100:.\Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2_DeadBand2_4)
 101:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_CONTROL |= PWM_2_CFG0_DB;
 102:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/PWM_2.c **** 
 104:.\Generated_Source\PSoC4/PWM_2.c ****         ctrl = PWM_2_CONTROL3 & ((uint8 )(~PWM_2_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_CONTROL3 = ctrl | PWM_2_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/PWM_2.c **** 
 107:.\Generated_Source\PSoC4/PWM_2.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_RT1 &= ((uint8)(~PWM_2_RT1_MASK));
 109:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_RT1 |= PWM_2_SYNC;
 110:.\Generated_Source\PSoC4/PWM_2.c **** 
 111:.\Generated_Source\PSoC4/PWM_2.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_RT1 &= ((uint8)(~PWM_2_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_RT1 |= PWM_2_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/PWM_2.c **** 
 115:.\Generated_Source\PSoC4/PWM_2.c ****     #elif (PWM_2_UseControl)
 116:.\Generated_Source\PSoC4/PWM_2.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/PWM_2.c ****         ctrl = PWM_2_CONTROL & ((uint8)(~PWM_2_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC4/PWM_2.c ****                 ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_CONTROL = ctrl | PWM_2_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC4/PWM_2.c ****                                    PWM_2_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/PWM_2.c **** 
 123:.\Generated_Source\PSoC4/PWM_2.c ****     #if (!PWM_2_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2_Resolution == 8)
 125:.\Generated_Source\PSoC4/PWM_2.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_AUX_CONTROLDP0 |= (PWM_2_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/PWM_2.c ****         #else /* (PWM_2_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/PWM_2.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_AUX_CONTROLDP0 |= (PWM_2_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_AUX_CONTROLDP1 |= (PWM_2_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_Resolution == 8) */
 132:.\Generated_Source\PSoC4/PWM_2.c **** 
 133:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_WriteCounter(PWM_2_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (!PWM_2_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/PWM_2.c **** 
 136:.\Generated_Source\PSoC4/PWM_2.c ****     PWM_2_WritePeriod(PWM_2_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC4/PWM_2.c **** 
 138:.\Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WriteCompare(PWM_2_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 141:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WriteCompare1(PWM_2_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WriteCompare2(PWM_2_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/PWM_2.c **** 
 145:.\Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2_KillModeMinTime)
 146:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WriteKillTime(PWM_2_MinimumKillTime);
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 4


 147:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/PWM_2.c **** 
 149:.\Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2_DeadBandUsed)
 150:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WriteDeadTime(PWM_2_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/PWM_2.c **** 
 153:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UseStatus || PWM_2_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_SetInterruptMode(PWM_2_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UseStatus || PWM_2_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/PWM_2.c **** 
 157:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/PWM_2.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_GLOBAL_ENABLE |= PWM_2_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/PWM_2.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_CONTROL2 |= PWM_2_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/PWM_2.c ****     #else
 163:.\Generated_Source\PSoC4/PWM_2.c ****         #if(PWM_2_UseStatus)
 164:.\Generated_Source\PSoC4/PWM_2.c **** 
 165:.\Generated_Source\PSoC4/PWM_2.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/PWM_2.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC4/PWM_2.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_STATUS_AUX_CTRL |= PWM_2_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC4/PWM_2.c **** 
 171:.\Generated_Source\PSoC4/PWM_2.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/PWM_2.c ****             CyExitCriticalSection(PWM_2_interruptState);
 173:.\Generated_Source\PSoC4/PWM_2.c **** 
 174:.\Generated_Source\PSoC4/PWM_2.c ****             /* Clear the FIFO to enable the PWM_2_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/PWM_2.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_ClearFIFO();
 177:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UseStatus) */
 178:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/PWM_2.c **** }
 180:.\Generated_Source\PSoC4/PWM_2.c **** 
 181:.\Generated_Source\PSoC4/PWM_2.c **** 
 182:.\Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_Enable
 184:.\Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/PWM_2.c **** *
 186:.\Generated_Source\PSoC4/PWM_2.c **** * Summary:
 187:.\Generated_Source\PSoC4/PWM_2.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/PWM_2.c **** *
 189:.\Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 190:.\Generated_Source\PSoC4/PWM_2.c **** *  None
 191:.\Generated_Source\PSoC4/PWM_2.c **** *
 192:.\Generated_Source\PSoC4/PWM_2.c **** * Return:
 193:.\Generated_Source\PSoC4/PWM_2.c **** *  None
 194:.\Generated_Source\PSoC4/PWM_2.c **** *
 195:.\Generated_Source\PSoC4/PWM_2.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/PWM_2.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/PWM_2.c **** *
 198:.\Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/PWM_2.c **** void PWM_2_Enable(void) 
 200:.\Generated_Source\PSoC4/PWM_2.c **** {
  26              		.loc 1 200 0
  27              		.cfi_startproc
 201:.\Generated_Source\PSoC4/PWM_2.c ****     /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 5


 202:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_GLOBAL_ENABLE |= PWM_2_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_GLOBAL_STBY_ENABLE |= PWM_2_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/PWM_2.c **** 
 207:.\Generated_Source\PSoC4/PWM_2.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UseControl || PWM_2_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_CONTROL |= PWM_2_CTRL_ENABLE;
  28              		.loc 1 209 0
  29 0000 024A     		ldr	r2, .L2
  30 0002 1178     		ldrb	r1, [r2]
  31 0004 8023     		mov	r3, #128
  32 0006 0B43     		orr	r3, r1
  33 0008 1370     		strb	r3, [r2]
 210:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UseControl || PWM_2_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/PWM_2.c **** }
  34              		.loc 1 211 0
  35              		@ sp needed
  36 000a 7047     		bx	lr
  37              	.L3:
  38              		.align	2
  39              	.L2:
  40 000c 73000F40 		.word	1074724979
  41              		.cfi_endproc
  42              	.LFE4:
  43              		.size	PWM_2_Enable, .-PWM_2_Enable
  44              		.section	.text.PWM_2_Stop,"ax",%progbits
  45              		.align	2
  46              		.global	PWM_2_Stop
  47              		.code	16
  48              		.thumb_func
  49              		.type	PWM_2_Stop, %function
  50              	PWM_2_Stop:
  51              	.LFB5:
 212:.\Generated_Source\PSoC4/PWM_2.c **** 
 213:.\Generated_Source\PSoC4/PWM_2.c **** 
 214:.\Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_Stop
 216:.\Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/PWM_2.c **** *
 218:.\Generated_Source\PSoC4/PWM_2.c **** * Summary:
 219:.\Generated_Source\PSoC4/PWM_2.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/PWM_2.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/PWM_2.c **** *
 222:.\Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 223:.\Generated_Source\PSoC4/PWM_2.c **** *  None
 224:.\Generated_Source\PSoC4/PWM_2.c **** *
 225:.\Generated_Source\PSoC4/PWM_2.c **** * Return:
 226:.\Generated_Source\PSoC4/PWM_2.c **** *  None
 227:.\Generated_Source\PSoC4/PWM_2.c **** *
 228:.\Generated_Source\PSoC4/PWM_2.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/PWM_2.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/PWM_2.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/PWM_2.c **** *
 232:.\Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/PWM_2.c **** void PWM_2_Stop(void) 
 234:.\Generated_Source\PSoC4/PWM_2.c **** {
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 6


  52              		.loc 1 234 0
  53              		.cfi_startproc
 235:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UseControl || PWM_2_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_CONTROL &= ((uint8)(~PWM_2_CTRL_ENABLE));
  54              		.loc 1 236 0
  55 0000 024A     		ldr	r2, .L5
  56 0002 1178     		ldrb	r1, [r2]
  57 0004 7F23     		mov	r3, #127
  58 0006 0B40     		and	r3, r1
  59 0008 1370     		strb	r3, [r2]
 237:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UseControl || PWM_2_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/PWM_2.c **** 
 239:.\Generated_Source\PSoC4/PWM_2.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_GLOBAL_ENABLE &= ((uint8)(~PWM_2_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_2_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/PWM_2.c **** }
  60              		.loc 1 244 0
  61              		@ sp needed
  62 000a 7047     		bx	lr
  63              	.L6:
  64              		.align	2
  65              	.L5:
  66 000c 73000F40 		.word	1074724979
  67              		.cfi_endproc
  68              	.LFE5:
  69              		.size	PWM_2_Stop, .-PWM_2_Stop
  70              		.section	.text.PWM_2_WriteCounter,"ax",%progbits
  71              		.align	2
  72              		.global	PWM_2_WriteCounter
  73              		.code	16
  74              		.thumb_func
  75              		.type	PWM_2_WriteCounter, %function
  76              	PWM_2_WriteCounter:
  77              	.LFB6:
 245:.\Generated_Source\PSoC4/PWM_2.c **** 
 246:.\Generated_Source\PSoC4/PWM_2.c **** #if (PWM_2_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_CompareMode1SW)
 248:.\Generated_Source\PSoC4/PWM_2.c **** 
 249:.\Generated_Source\PSoC4/PWM_2.c **** 
 250:.\Generated_Source\PSoC4/PWM_2.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/PWM_2.c ****         * Function Name: PWM_2_SetCompareMode
 252:.\Generated_Source\PSoC4/PWM_2.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/PWM_2.c ****         *
 254:.\Generated_Source\PSoC4/PWM_2.c ****         * Summary:
 255:.\Generated_Source\PSoC4/PWM_2.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/PWM_2.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/PWM_2.c ****         *
 258:.\Generated_Source\PSoC4/PWM_2.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/PWM_2.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/PWM_2.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/PWM_2.c ****         *
 262:.\Generated_Source\PSoC4/PWM_2.c ****         * Return:
 263:.\Generated_Source\PSoC4/PWM_2.c ****         *  None
 264:.\Generated_Source\PSoC4/PWM_2.c ****         *
 265:.\Generated_Source\PSoC4/PWM_2.c ****         *******************************************************************************/
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 7


 266:.\Generated_Source\PSoC4/PWM_2.c ****         void PWM_2_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/PWM_2.c ****         {
 268:.\Generated_Source\PSoC4/PWM_2.c ****             #if(PWM_2_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/PWM_2.c **** 
 270:.\Generated_Source\PSoC4/PWM_2.c ****                 #if(0 != PWM_2_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/PWM_2.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE1_SH
 272:.\Generated_Source\PSoC4/PWM_2.c ****                 #else
 273:.\Generated_Source\PSoC4/PWM_2.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/PWM_2.c ****                 #endif /* (0 != PWM_2_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/PWM_2.c **** 
 276:.\Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_CONTROL3 &= ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/PWM_2.c **** 
 279:.\Generated_Source\PSoC4/PWM_2.c ****             #elif (PWM_2_UseControl)
 280:.\Generated_Source\PSoC4/PWM_2.c **** 
 281:.\Generated_Source\PSoC4/PWM_2.c ****                 #if(0 != PWM_2_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/PWM_2.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE1_S
 283:.\Generated_Source\PSoC4/PWM_2.c ****                                                 PWM_2_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/PWM_2.c ****                 #else
 285:.\Generated_Source\PSoC4/PWM_2.c ****                     uint8 comparemode1masked = comparemode & PWM_2_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/PWM_2.c ****                 #endif /* (0 != PWM_2_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/PWM_2.c **** 
 288:.\Generated_Source\PSoC4/PWM_2.c ****                 #if(0 != PWM_2_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/PWM_2.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE2_S
 290:.\Generated_Source\PSoC4/PWM_2.c ****                                                PWM_2_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/PWM_2.c ****                 #else
 292:.\Generated_Source\PSoC4/PWM_2.c ****                     uint8 comparemode2masked = comparemode & PWM_2_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/PWM_2.c ****                 #endif /* (0 != PWM_2_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/PWM_2.c **** 
 295:.\Generated_Source\PSoC4/PWM_2.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_CONTROL &= ((uint8)(~(PWM_2_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/PWM_2.c ****                                             PWM_2_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/PWM_2.c **** 
 300:.\Generated_Source\PSoC4/PWM_2.c ****             #else
 301:.\Generated_Source\PSoC4/PWM_2.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/PWM_2.c ****             #endif /* (PWM_2_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/PWM_2.c ****         }
 304:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* PWM_2_CompareMode1SW */
 305:.\Generated_Source\PSoC4/PWM_2.c **** 
 306:.\Generated_Source\PSoC4/PWM_2.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/PWM_2.c **** 
 308:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_CompareMode1SW)
 309:.\Generated_Source\PSoC4/PWM_2.c **** 
 310:.\Generated_Source\PSoC4/PWM_2.c **** 
 311:.\Generated_Source\PSoC4/PWM_2.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/PWM_2.c ****         * Function Name: PWM_2_SetCompareMode1
 313:.\Generated_Source\PSoC4/PWM_2.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/PWM_2.c ****         *
 315:.\Generated_Source\PSoC4/PWM_2.c ****         * Summary:
 316:.\Generated_Source\PSoC4/PWM_2.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/PWM_2.c ****         *
 318:.\Generated_Source\PSoC4/PWM_2.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/PWM_2.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/PWM_2.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/PWM_2.c ****         *
 322:.\Generated_Source\PSoC4/PWM_2.c ****         * Return:
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 8


 323:.\Generated_Source\PSoC4/PWM_2.c ****         *  None
 324:.\Generated_Source\PSoC4/PWM_2.c ****         *
 325:.\Generated_Source\PSoC4/PWM_2.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM_2.c ****         void PWM_2_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/PWM_2.c ****         {
 328:.\Generated_Source\PSoC4/PWM_2.c ****             #if(0 != PWM_2_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/PWM_2.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE1_SHIFT)
 330:.\Generated_Source\PSoC4/PWM_2.c ****                                            PWM_2_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/PWM_2.c ****             #else
 332:.\Generated_Source\PSoC4/PWM_2.c ****                 uint8 comparemodemasked = comparemode & PWM_2_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/PWM_2.c ****             #endif /* (0 != PWM_2_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/PWM_2.c **** 
 335:.\Generated_Source\PSoC4/PWM_2.c ****             #if (PWM_2_UseControl)
 336:.\Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_CONTROL &= ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/PWM_2.c ****             #endif /* (PWM_2_UseControl) */
 339:.\Generated_Source\PSoC4/PWM_2.c ****         }
 340:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* PWM_2_CompareMode1SW */
 341:.\Generated_Source\PSoC4/PWM_2.c **** 
 342:.\Generated_Source\PSoC4/PWM_2.c **** #if (PWM_2_CompareMode2SW)
 343:.\Generated_Source\PSoC4/PWM_2.c **** 
 344:.\Generated_Source\PSoC4/PWM_2.c **** 
 345:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_SetCompareMode2
 347:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/PWM_2.c ****     *
 349:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 350:.\Generated_Source\PSoC4/PWM_2.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/PWM_2.c ****     *
 352:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/PWM_2.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/PWM_2.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/PWM_2.c ****     *
 356:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 357:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 358:.\Generated_Source\PSoC4/PWM_2.c ****     *
 359:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/PWM_2.c ****     void PWM_2_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/PWM_2.c ****     {
 362:.\Generated_Source\PSoC4/PWM_2.c **** 
 363:.\Generated_Source\PSoC4/PWM_2.c ****         #if(0 != PWM_2_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/PWM_2.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC4/PWM_2.c ****                                                  PWM_2_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 367:.\Generated_Source\PSoC4/PWM_2.c ****             uint8 comparemodemasked = comparemode & PWM_2_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (0 != PWM_2_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/PWM_2.c **** 
 370:.\Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2_UseControl)
 371:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_CONTROL &= ((uint8)(~PWM_2_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UseControl) */
 374:.\Generated_Source\PSoC4/PWM_2.c ****     }
 375:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /*PWM_2_CompareMode2SW */
 376:.\Generated_Source\PSoC4/PWM_2.c **** 
 377:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/PWM_2.c **** 
 379:.\Generated_Source\PSoC4/PWM_2.c **** 
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 9


 380:.\Generated_Source\PSoC4/PWM_2.c **** #if (!PWM_2_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/PWM_2.c **** 
 382:.\Generated_Source\PSoC4/PWM_2.c **** 
 383:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_WriteCounter
 385:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/PWM_2.c ****     *
 387:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 388:.\Generated_Source\PSoC4/PWM_2.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/PWM_2.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/PWM_2.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/PWM_2.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/PWM_2.c ****     *
 393:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/PWM_2.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/PWM_2.c ****     *
 396:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 397:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 398:.\Generated_Source\PSoC4/PWM_2.c ****     *
 399:.\Generated_Source\PSoC4/PWM_2.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/PWM_2.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/PWM_2.c ****     *
 402:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/PWM_2.c ****     void PWM_2_WriteCounter(uint8 counter) \
 404:.\Generated_Source\PSoC4/PWM_2.c ****                                        
 405:.\Generated_Source\PSoC4/PWM_2.c ****     {
  78              		.loc 1 405 0
  79              		.cfi_startproc
  80              	.LVL0:
 406:.\Generated_Source\PSoC4/PWM_2.c ****         CY_SET_REG8(PWM_2_COUNTER_LSB_PTR, counter);
  81              		.loc 1 406 0
  82 0000 014B     		ldr	r3, .L8
  83 0002 1870     		strb	r0, [r3]
 407:.\Generated_Source\PSoC4/PWM_2.c ****     }
  84              		.loc 1 407 0
  85              		@ sp needed
  86 0004 7047     		bx	lr
  87              	.L9:
  88 0006 C046     		.align	2
  89              	.L8:
  90 0008 03000F40 		.word	1074724867
  91              		.cfi_endproc
  92              	.LFE6:
  93              		.size	PWM_2_WriteCounter, .-PWM_2_WriteCounter
  94              		.section	.text.PWM_2_ReadCounter,"ax",%progbits
  95              		.align	2
  96              		.global	PWM_2_ReadCounter
  97              		.code	16
  98              		.thumb_func
  99              		.type	PWM_2_ReadCounter, %function
 100              	PWM_2_ReadCounter:
 101              	.LFB7:
 408:.\Generated_Source\PSoC4/PWM_2.c **** 
 409:.\Generated_Source\PSoC4/PWM_2.c **** 
 410:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_ReadCounter
 412:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 10


 413:.\Generated_Source\PSoC4/PWM_2.c ****     *
 414:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 415:.\Generated_Source\PSoC4/PWM_2.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/PWM_2.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/PWM_2.c ****     *
 418:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 420:.\Generated_Source\PSoC4/PWM_2.c ****     *
 421:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 422:.\Generated_Source\PSoC4/PWM_2.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/PWM_2.c ****     *
 424:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/PWM_2.c ****     uint8 PWM_2_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/PWM_2.c ****     {
 102              		.loc 1 426 0
 103              		.cfi_startproc
 427:.\Generated_Source\PSoC4/PWM_2.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/PWM_2.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/PWM_2.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/PWM_2.c ****           (void)CY_GET_REG8(PWM_2_COUNTERCAP_LSB_PTR_8BIT);
 104              		.loc 1 430 0
 105 0000 024B     		ldr	r3, .L11
 106 0002 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/PWM_2.c **** 
 432:.\Generated_Source\PSoC4/PWM_2.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/PWM_2.c ****         return (CY_GET_REG8(PWM_2_CAPTURE_LSB_PTR));
 107              		.loc 1 433 0
 108 0004 024B     		ldr	r3, .L11+4
 109 0006 1878     		ldrb	r0, [r3]
 110 0008 C0B2     		uxtb	r0, r0
 434:.\Generated_Source\PSoC4/PWM_2.c ****     }
 111              		.loc 1 434 0
 112              		@ sp needed
 113 000a 7047     		bx	lr
 114              	.L12:
 115              		.align	2
 116              	.L11:
 117 000c 13000F40 		.word	1074724883
 118 0010 53000F40 		.word	1074724947
 119              		.cfi_endproc
 120              	.LFE7:
 121              		.size	PWM_2_ReadCounter, .-PWM_2_ReadCounter
 122              		.section	.text.PWM_2_WritePeriod,"ax",%progbits
 123              		.align	2
 124              		.global	PWM_2_WritePeriod
 125              		.code	16
 126              		.thumb_func
 127              		.type	PWM_2_WritePeriod, %function
 128              	PWM_2_WritePeriod:
 129              	.LFB9:
 435:.\Generated_Source\PSoC4/PWM_2.c **** 
 436:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UseStatus)
 437:.\Generated_Source\PSoC4/PWM_2.c **** 
 438:.\Generated_Source\PSoC4/PWM_2.c **** 
 439:.\Generated_Source\PSoC4/PWM_2.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/PWM_2.c ****         * Function Name: PWM_2_ClearFIFO
 441:.\Generated_Source\PSoC4/PWM_2.c ****         ********************************************************************************
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 11


 442:.\Generated_Source\PSoC4/PWM_2.c ****         *
 443:.\Generated_Source\PSoC4/PWM_2.c ****         * Summary:
 444:.\Generated_Source\PSoC4/PWM_2.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/PWM_2.c ****         *
 446:.\Generated_Source\PSoC4/PWM_2.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/PWM_2.c ****         *  None
 448:.\Generated_Source\PSoC4/PWM_2.c ****         *
 449:.\Generated_Source\PSoC4/PWM_2.c ****         * Return:
 450:.\Generated_Source\PSoC4/PWM_2.c ****         *  None
 451:.\Generated_Source\PSoC4/PWM_2.c ****         *
 452:.\Generated_Source\PSoC4/PWM_2.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/PWM_2.c ****         void PWM_2_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/PWM_2.c ****         {
 455:.\Generated_Source\PSoC4/PWM_2.c ****             while(0u != (PWM_2_ReadStatusRegister() & PWM_2_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC4/PWM_2.c ****             {
 457:.\Generated_Source\PSoC4/PWM_2.c ****                 (void)PWM_2_ReadCapture();
 458:.\Generated_Source\PSoC4/PWM_2.c ****             }
 459:.\Generated_Source\PSoC4/PWM_2.c ****         }
 460:.\Generated_Source\PSoC4/PWM_2.c **** 
 461:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* PWM_2_UseStatus */
 462:.\Generated_Source\PSoC4/PWM_2.c **** 
 463:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* !PWM_2_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/PWM_2.c **** 
 465:.\Generated_Source\PSoC4/PWM_2.c **** 
 466:.\Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_WritePeriod
 468:.\Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/PWM_2.c **** *
 470:.\Generated_Source\PSoC4/PWM_2.c **** * Summary:
 471:.\Generated_Source\PSoC4/PWM_2.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/PWM_2.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/PWM_2.c **** *
 474:.\Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 475:.\Generated_Source\PSoC4/PWM_2.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/PWM_2.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/PWM_2.c **** *
 478:.\Generated_Source\PSoC4/PWM_2.c **** * Return:
 479:.\Generated_Source\PSoC4/PWM_2.c **** *  None
 480:.\Generated_Source\PSoC4/PWM_2.c **** *
 481:.\Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/PWM_2.c **** void PWM_2_WritePeriod(uint8 period) 
 483:.\Generated_Source\PSoC4/PWM_2.c **** {
 130              		.loc 1 483 0
 131              		.cfi_startproc
 132              	.LVL1:
 484:.\Generated_Source\PSoC4/PWM_2.c ****     #if(PWM_2_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/PWM_2.c ****         CY_SET_REG16(PWM_2_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/PWM_2.c ****     #else
 487:.\Generated_Source\PSoC4/PWM_2.c ****         CY_SET_REG8(PWM_2_PERIOD_LSB_PTR, period);
 133              		.loc 1 487 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1870     		strb	r0, [r3]
 488:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/PWM_2.c **** }
 136              		.loc 1 489 0
 137              		@ sp needed
 138 0004 7047     		bx	lr
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 12


 139              	.L15:
 140 0006 C046     		.align	2
 141              	.L14:
 142 0008 43000F40 		.word	1074724931
 143              		.cfi_endproc
 144              	.LFE9:
 145              		.size	PWM_2_WritePeriod, .-PWM_2_WritePeriod
 146              		.section	.text.PWM_2_WriteCompare,"ax",%progbits
 147              		.align	2
 148              		.global	PWM_2_WriteCompare
 149              		.code	16
 150              		.thumb_func
 151              		.type	PWM_2_WriteCompare, %function
 152              	PWM_2_WriteCompare:
 153              	.LFB10:
 490:.\Generated_Source\PSoC4/PWM_2.c **** 
 491:.\Generated_Source\PSoC4/PWM_2.c **** #if (PWM_2_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/PWM_2.c **** 
 493:.\Generated_Source\PSoC4/PWM_2.c **** 
 494:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_WriteCompare
 496:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/PWM_2.c ****     *
 498:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 499:.\Generated_Source\PSoC4/PWM_2.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/PWM_2.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/PWM_2.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/PWM_2.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/PWM_2.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/PWM_2.c ****     *
 505:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/PWM_2.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/PWM_2.c ****     *
 508:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 509:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 510:.\Generated_Source\PSoC4/PWM_2.c ****     *
 511:.\Generated_Source\PSoC4/PWM_2.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/PWM_2.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/PWM_2.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/PWM_2.c ****     *
 515:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/PWM_2.c ****     void PWM_2_WriteCompare(uint8 compare) \
 517:.\Generated_Source\PSoC4/PWM_2.c ****                                        
 518:.\Generated_Source\PSoC4/PWM_2.c ****     {
 154              		.loc 1 518 0
 155              		.cfi_startproc
 156              	.LVL2:
 519:.\Generated_Source\PSoC4/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 522:.\Generated_Source\PSoC4/PWM_2.c ****             CY_SET_REG8(PWM_2_COMPARE1_LSB_PTR, compare);
 157              		.loc 1 522 0
 158 0000 014B     		ldr	r3, .L17
 159 0002 1870     		strb	r0, [r3]
 523:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/PWM_2.c **** 
 525:.\Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2_PWMMode == PWM_2__B_PWM__DITHER)
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 13


 526:.\Generated_Source\PSoC4/PWM_2.c ****             #if(PWM_2_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/PWM_2.c ****                 CY_SET_REG16(PWM_2_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/PWM_2.c ****             #else
 529:.\Generated_Source\PSoC4/PWM_2.c ****                 CY_SET_REG8(PWM_2_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/PWM_2.c ****             #endif /* (PWM_2_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_PWMMode == PWM_2__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/PWM_2.c ****     }
 160              		.loc 1 532 0
 161              		@ sp needed
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 C046     		.align	2
 165              	.L17:
 166 0008 23000F40 		.word	1074724899
 167              		.cfi_endproc
 168              	.LFE10:
 169              		.size	PWM_2_WriteCompare, .-PWM_2_WriteCompare
 170              		.section	.text.PWM_2_SetInterruptMode,"ax",%progbits
 171              		.align	2
 172              		.global	PWM_2_SetInterruptMode
 173              		.code	16
 174              		.thumb_func
 175              		.type	PWM_2_SetInterruptMode, %function
 176              	PWM_2_SetInterruptMode:
 177              	.LFB11:
 533:.\Generated_Source\PSoC4/PWM_2.c **** 
 534:.\Generated_Source\PSoC4/PWM_2.c **** 
 535:.\Generated_Source\PSoC4/PWM_2.c **** #else
 536:.\Generated_Source\PSoC4/PWM_2.c **** 
 537:.\Generated_Source\PSoC4/PWM_2.c **** 
 538:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_WriteCompare1
 540:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/PWM_2.c ****     *
 542:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 543:.\Generated_Source\PSoC4/PWM_2.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/PWM_2.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/PWM_2.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/PWM_2.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/PWM_2.c ****     *
 548:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/PWM_2.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/PWM_2.c ****     *
 551:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 552:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 553:.\Generated_Source\PSoC4/PWM_2.c ****     *
 554:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/PWM_2.c ****     void PWM_2_WriteCompare1(uint8 compare) \
 556:.\Generated_Source\PSoC4/PWM_2.c ****                                         
 557:.\Generated_Source\PSoC4/PWM_2.c ****     {
 558:.\Generated_Source\PSoC4/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 561:.\Generated_Source\PSoC4/PWM_2.c ****             CY_SET_REG8(PWM_2_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/PWM_2.c ****     }
 564:.\Generated_Source\PSoC4/PWM_2.c **** 
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 14


 565:.\Generated_Source\PSoC4/PWM_2.c **** 
 566:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_WriteCompare2
 568:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM_2.c ****     *
 570:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 571:.\Generated_Source\PSoC4/PWM_2.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/PWM_2.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/PWM_2.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/PWM_2.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/PWM_2.c ****     *  mode.
 576:.\Generated_Source\PSoC4/PWM_2.c ****     *
 577:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/PWM_2.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/PWM_2.c ****     *
 580:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 581:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 582:.\Generated_Source\PSoC4/PWM_2.c ****     *
 583:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/PWM_2.c ****     void PWM_2_WriteCompare2(uint8 compare) \
 585:.\Generated_Source\PSoC4/PWM_2.c ****                                         
 586:.\Generated_Source\PSoC4/PWM_2.c ****     {
 587:.\Generated_Source\PSoC4/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 590:.\Generated_Source\PSoC4/PWM_2.c ****             CY_SET_REG8(PWM_2_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/PWM_2.c ****     }
 593:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/PWM_2.c **** 
 595:.\Generated_Source\PSoC4/PWM_2.c **** #if (PWM_2_DeadBandUsed)
 596:.\Generated_Source\PSoC4/PWM_2.c **** 
 597:.\Generated_Source\PSoC4/PWM_2.c **** 
 598:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_WriteDeadTime
 600:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/PWM_2.c ****     *
 602:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 603:.\Generated_Source\PSoC4/PWM_2.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/PWM_2.c ****     *
 605:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/PWM_2.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/PWM_2.c ****     *
 608:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 609:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 610:.\Generated_Source\PSoC4/PWM_2.c ****     *
 611:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/PWM_2.c ****     void PWM_2_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/PWM_2.c ****     {
 614:.\Generated_Source\PSoC4/PWM_2.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/PWM_2.c ****         #if(!PWM_2_DeadBand2_4)
 616:.\Generated_Source\PSoC4/PWM_2.c ****             CY_SET_REG8(PWM_2_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 618:.\Generated_Source\PSoC4/PWM_2.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/PWM_2.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/PWM_2.c ****             PWM_2_DEADBAND_COUNT &= ((uint8)(~PWM_2_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/PWM_2.c **** 
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 15


 622:.\Generated_Source\PSoC4/PWM_2.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/PWM_2.c ****             #if(PWM_2_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_2_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC4/PWM_2.c ****                                                     PWM_2_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/PWM_2.c ****             #else
 627:.\Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_DEADBAND_COUNT |= deadtime & PWM_2_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/PWM_2.c ****             #endif /* (PWM_2_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/PWM_2.c **** 
 630:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (!PWM_2_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/PWM_2.c ****     }
 632:.\Generated_Source\PSoC4/PWM_2.c **** 
 633:.\Generated_Source\PSoC4/PWM_2.c **** 
 634:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_ReadDeadTime
 636:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/PWM_2.c ****     *
 638:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 639:.\Generated_Source\PSoC4/PWM_2.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/PWM_2.c ****     *
 641:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 643:.\Generated_Source\PSoC4/PWM_2.c ****     *
 644:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 645:.\Generated_Source\PSoC4/PWM_2.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/PWM_2.c ****     *
 647:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/PWM_2.c ****     uint8 PWM_2_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/PWM_2.c ****     {
 650:.\Generated_Source\PSoC4/PWM_2.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/PWM_2.c ****         #if(!PWM_2_DeadBand2_4)
 652:.\Generated_Source\PSoC4/PWM_2.c ****             return (CY_GET_REG8(PWM_2_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 654:.\Generated_Source\PSoC4/PWM_2.c **** 
 655:.\Generated_Source\PSoC4/PWM_2.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/PWM_2.c ****             #if(PWM_2_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/PWM_2.c ****                 return ((uint8)(((uint8)(PWM_2_DEADBAND_COUNT & PWM_2_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC4/PWM_2.c ****                                                                            PWM_2_DEADBAND_COUNT_SHI
 659:.\Generated_Source\PSoC4/PWM_2.c ****             #else
 660:.\Generated_Source\PSoC4/PWM_2.c ****                 return (PWM_2_DEADBAND_COUNT & PWM_2_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/PWM_2.c ****             #endif /* (PWM_2_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (!PWM_2_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/PWM_2.c ****     }
 664:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/PWM_2.c **** 
 666:.\Generated_Source\PSoC4/PWM_2.c **** #if (PWM_2_UseStatus || PWM_2_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/PWM_2.c **** 
 668:.\Generated_Source\PSoC4/PWM_2.c **** 
 669:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_SetInterruptMode
 671:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/PWM_2.c ****     *
 673:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 674:.\Generated_Source\PSoC4/PWM_2.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/PWM_2.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/PWM_2.c ****     *
 677:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/PWM_2.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 16


 679:.\Generated_Source\PSoC4/PWM_2.c ****     *
 680:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 681:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 682:.\Generated_Source\PSoC4/PWM_2.c ****     *
 683:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/PWM_2.c ****     void PWM_2_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/PWM_2.c ****     {
 178              		.loc 1 685 0
 179              		.cfi_startproc
 180              	.LVL3:
 686:.\Generated_Source\PSoC4/PWM_2.c ****         CY_SET_REG8(PWM_2_STATUS_MASK_PTR, interruptMode);
 181              		.loc 1 686 0
 182 0000 014B     		ldr	r3, .L20
 183 0002 1870     		strb	r0, [r3]
 687:.\Generated_Source\PSoC4/PWM_2.c ****     }
 184              		.loc 1 687 0
 185              		@ sp needed
 186 0004 7047     		bx	lr
 187              	.L21:
 188 0006 C046     		.align	2
 189              	.L20:
 190 0008 83000F40 		.word	1074724995
 191              		.cfi_endproc
 192              	.LFE11:
 193              		.size	PWM_2_SetInterruptMode, .-PWM_2_SetInterruptMode
 194              		.section	.text.PWM_2_ReadStatusRegister,"ax",%progbits
 195              		.align	2
 196              		.global	PWM_2_ReadStatusRegister
 197              		.code	16
 198              		.thumb_func
 199              		.type	PWM_2_ReadStatusRegister, %function
 200              	PWM_2_ReadStatusRegister:
 201              	.LFB12:
 688:.\Generated_Source\PSoC4/PWM_2.c **** 
 689:.\Generated_Source\PSoC4/PWM_2.c **** 
 690:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_ReadStatusRegister
 692:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/PWM_2.c ****     *
 694:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 695:.\Generated_Source\PSoC4/PWM_2.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/PWM_2.c ****     *
 697:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 699:.\Generated_Source\PSoC4/PWM_2.c ****     *
 700:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 701:.\Generated_Source\PSoC4/PWM_2.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/PWM_2.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/PWM_2.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/PWM_2.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/PWM_2.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/PWM_2.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/PWM_2.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/PWM_2.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/PWM_2.c ****     *
 710:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/PWM_2.c ****     uint8 PWM_2_ReadStatusRegister(void) 
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 17


 712:.\Generated_Source\PSoC4/PWM_2.c ****     {
 202              		.loc 1 712 0
 203              		.cfi_startproc
 713:.\Generated_Source\PSoC4/PWM_2.c ****         return (CY_GET_REG8(PWM_2_STATUS_PTR));
 204              		.loc 1 713 0
 205 0000 014B     		ldr	r3, .L23
 206 0002 1878     		ldrb	r0, [r3]
 207 0004 C0B2     		uxtb	r0, r0
 714:.\Generated_Source\PSoC4/PWM_2.c ****     }
 208              		.loc 1 714 0
 209              		@ sp needed
 210 0006 7047     		bx	lr
 211              	.L24:
 212              		.align	2
 213              	.L23:
 214 0008 63000F40 		.word	1074724963
 215              		.cfi_endproc
 216              	.LFE12:
 217              		.size	PWM_2_ReadStatusRegister, .-PWM_2_ReadStatusRegister
 218              		.section	.text.PWM_2_ReadControlRegister,"ax",%progbits
 219              		.align	2
 220              		.global	PWM_2_ReadControlRegister
 221              		.code	16
 222              		.thumb_func
 223              		.type	PWM_2_ReadControlRegister, %function
 224              	PWM_2_ReadControlRegister:
 225              	.LFB13:
 715:.\Generated_Source\PSoC4/PWM_2.c **** 
 716:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* (PWM_2_UseStatus || PWM_2_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/PWM_2.c **** 
 718:.\Generated_Source\PSoC4/PWM_2.c **** 
 719:.\Generated_Source\PSoC4/PWM_2.c **** #if (PWM_2_UseControl)
 720:.\Generated_Source\PSoC4/PWM_2.c **** 
 721:.\Generated_Source\PSoC4/PWM_2.c **** 
 722:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_ReadControlRegister
 724:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/PWM_2.c ****     *
 726:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 727:.\Generated_Source\PSoC4/PWM_2.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/PWM_2.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/PWM_2.c ****     *
 730:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 732:.\Generated_Source\PSoC4/PWM_2.c ****     *
 733:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 734:.\Generated_Source\PSoC4/PWM_2.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/PWM_2.c ****     *
 736:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/PWM_2.c ****     uint8 PWM_2_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/PWM_2.c ****     {
 226              		.loc 1 738 0
 227              		.cfi_startproc
 739:.\Generated_Source\PSoC4/PWM_2.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/PWM_2.c **** 
 741:.\Generated_Source\PSoC4/PWM_2.c ****         result = CY_GET_REG8(PWM_2_CONTROL_PTR);
 228              		.loc 1 741 0
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 18


 229 0000 014B     		ldr	r3, .L26
 230 0002 1878     		ldrb	r0, [r3]
 231 0004 C0B2     		uxtb	r0, r0
 232              	.LVL4:
 742:.\Generated_Source\PSoC4/PWM_2.c ****         return (result);
 743:.\Generated_Source\PSoC4/PWM_2.c ****     }
 233              		.loc 1 743 0
 234              		@ sp needed
 235 0006 7047     		bx	lr
 236              	.L27:
 237              		.align	2
 238              	.L26:
 239 0008 73000F40 		.word	1074724979
 240              		.cfi_endproc
 241              	.LFE13:
 242              		.size	PWM_2_ReadControlRegister, .-PWM_2_ReadControlRegister
 243              		.section	.text.PWM_2_WriteControlRegister,"ax",%progbits
 244              		.align	2
 245              		.global	PWM_2_WriteControlRegister
 246              		.code	16
 247              		.thumb_func
 248              		.type	PWM_2_WriteControlRegister, %function
 249              	PWM_2_WriteControlRegister:
 250              	.LFB14:
 744:.\Generated_Source\PSoC4/PWM_2.c **** 
 745:.\Generated_Source\PSoC4/PWM_2.c **** 
 746:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_WriteControlRegister
 748:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_2.c ****     *
 750:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 751:.\Generated_Source\PSoC4/PWM_2.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/PWM_2.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/PWM_2.c ****     *
 754:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/PWM_2.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/PWM_2.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/PWM_2.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/PWM_2.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/PWM_2.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/PWM_2.c ****     *
 761:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 762:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 763:.\Generated_Source\PSoC4/PWM_2.c ****     *
 764:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/PWM_2.c ****     void PWM_2_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/PWM_2.c ****     {
 251              		.loc 1 766 0
 252              		.cfi_startproc
 253              	.LVL5:
 767:.\Generated_Source\PSoC4/PWM_2.c ****         CY_SET_REG8(PWM_2_CONTROL_PTR, control);
 254              		.loc 1 767 0
 255 0000 014B     		ldr	r3, .L29
 256 0002 1870     		strb	r0, [r3]
 768:.\Generated_Source\PSoC4/PWM_2.c ****     }
 257              		.loc 1 768 0
 258              		@ sp needed
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 19


 259 0004 7047     		bx	lr
 260              	.L30:
 261 0006 C046     		.align	2
 262              	.L29:
 263 0008 73000F40 		.word	1074724979
 264              		.cfi_endproc
 265              	.LFE14:
 266              		.size	PWM_2_WriteControlRegister, .-PWM_2_WriteControlRegister
 267              		.section	.text.PWM_2_ReadCapture,"ax",%progbits
 268              		.align	2
 269              		.global	PWM_2_ReadCapture
 270              		.code	16
 271              		.thumb_func
 272              		.type	PWM_2_ReadCapture, %function
 273              	PWM_2_ReadCapture:
 274              	.LFB15:
 769:.\Generated_Source\PSoC4/PWM_2.c **** 
 770:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* (PWM_2_UseControl) */
 771:.\Generated_Source\PSoC4/PWM_2.c **** 
 772:.\Generated_Source\PSoC4/PWM_2.c **** 
 773:.\Generated_Source\PSoC4/PWM_2.c **** #if (!PWM_2_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/PWM_2.c **** 
 775:.\Generated_Source\PSoC4/PWM_2.c **** 
 776:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_ReadCapture
 778:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/PWM_2.c ****     *
 780:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 781:.\Generated_Source\PSoC4/PWM_2.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/PWM_2.c ****     *
 783:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 785:.\Generated_Source\PSoC4/PWM_2.c ****     *
 786:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 787:.\Generated_Source\PSoC4/PWM_2.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/PWM_2.c ****     *
 789:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/PWM_2.c ****     uint8 PWM_2_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/PWM_2.c ****     {
 275              		.loc 1 791 0
 276              		.cfi_startproc
 792:.\Generated_Source\PSoC4/PWM_2.c ****         return (CY_GET_REG8(PWM_2_CAPTURE_LSB_PTR));
 277              		.loc 1 792 0
 278 0000 014B     		ldr	r3, .L32
 279 0002 1878     		ldrb	r0, [r3]
 280 0004 C0B2     		uxtb	r0, r0
 793:.\Generated_Source\PSoC4/PWM_2.c ****     }
 281              		.loc 1 793 0
 282              		@ sp needed
 283 0006 7047     		bx	lr
 284              	.L33:
 285              		.align	2
 286              	.L32:
 287 0008 53000F40 		.word	1074724947
 288              		.cfi_endproc
 289              	.LFE15:
 290              		.size	PWM_2_ReadCapture, .-PWM_2_ReadCapture
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 20


 291              		.section	.text.PWM_2_ClearFIFO,"ax",%progbits
 292              		.align	2
 293              		.global	PWM_2_ClearFIFO
 294              		.code	16
 295              		.thumb_func
 296              		.type	PWM_2_ClearFIFO, %function
 297              	PWM_2_ClearFIFO:
 298              	.LFB8:
 454:.\Generated_Source\PSoC4/PWM_2.c ****             while(0u != (PWM_2_ReadStatusRegister() & PWM_2_STATUS_FIFONEMPTY))
 299              		.loc 1 454 0
 300              		.cfi_startproc
 301 0000 08B5     		push	{r3, lr}
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC4/PWM_2.c ****             {
 305              		.loc 1 455 0
 306 0002 01E0     		b	.L35
 307              	.L36:
 457:.\Generated_Source\PSoC4/PWM_2.c ****             }
 308              		.loc 1 457 0
 309 0004 FFF7FEFF 		bl	PWM_2_ReadCapture
 310              	.LVL6:
 311              	.L35:
 455:.\Generated_Source\PSoC4/PWM_2.c ****             {
 312              		.loc 1 455 0
 313 0008 FFF7FEFF 		bl	PWM_2_ReadStatusRegister
 314              	.LVL7:
 315 000c C306     		lsl	r3, r0, #27
 316 000e F9D4     		bmi	.L36
 459:.\Generated_Source\PSoC4/PWM_2.c **** 
 317              		.loc 1 459 0
 318              		@ sp needed
 319 0010 08BD     		pop	{r3, pc}
 320              		.cfi_endproc
 321              	.LFE8:
 322              		.size	PWM_2_ClearFIFO, .-PWM_2_ClearFIFO
 323 0012 C046     		.section	.text.PWM_2_Init,"ax",%progbits
 324              		.align	2
 325              		.global	PWM_2_Init
 326              		.code	16
 327              		.thumb_func
 328              		.type	PWM_2_Init, %function
 329              	PWM_2_Init:
 330              	.LFB3:
  85:.\Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_UsingFixedFunction || PWM_2_UseControl)
 331              		.loc 1 85 0
 332              		.cfi_startproc
 333 0000 10B5     		push	{r4, lr}
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 4, -8
 336              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC4/PWM_2.c ****                 ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK));
 337              		.loc 1 117 0
 338 0002 1149     		ldr	r1, .L38
 339 0004 0B78     		ldrb	r3, [r1]
 340 0006 3F22     		mov	r2, #63
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 21


 341 0008 9343     		bic	r3, r2
 342              	.LVL8:
 119:.\Generated_Source\PSoC4/PWM_2.c ****                                    PWM_2_DEFAULT_COMPARE1_MODE;
 343              		.loc 1 119 0
 344 000a 363A     		sub	r2, r2, #54
 345 000c 1343     		orr	r3, r2
 346              	.LVL9:
 347 000e 0B70     		strb	r3, [r1]
 126:.\Generated_Source\PSoC4/PWM_2.c ****         #else /* (PWM_2_Resolution == 16)*/
 348              		.loc 1 126 0
 349 0010 0E4C     		ldr	r4, .L38+4
 350 0012 2278     		ldrb	r2, [r4]
 351 0014 0123     		mov	r3, #1
 352 0016 1343     		orr	r3, r2
 353 0018 2370     		strb	r3, [r4]
 133:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (!PWM_2_UsingFixedFunction) */
 354              		.loc 1 133 0
 355 001a FF20     		mov	r0, #255
 356 001c FFF7FEFF 		bl	PWM_2_WriteCounter
 357              	.LVL10:
 136:.\Generated_Source\PSoC4/PWM_2.c **** 
 358              		.loc 1 136 0
 359 0020 FF20     		mov	r0, #255
 360 0022 FFF7FEFF 		bl	PWM_2_WritePeriod
 361              	.LVL11:
 139:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 362              		.loc 1 139 0
 363 0026 7F20     		mov	r0, #127
 364 0028 FFF7FEFF 		bl	PWM_2_WriteCompare
 365              	.LVL12:
 154:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UseStatus || PWM_2_UsingFixedFunction) */
 366              		.loc 1 154 0
 367 002c 0020     		mov	r0, #0
 368 002e FFF7FEFF 		bl	PWM_2_SetInterruptMode
 369              	.LVL13:
 167:.\Generated_Source\PSoC4/PWM_2.c ****             /* Use the interrupt output of the status register for IRQ output */
 370              		.loc 1 167 0
 371 0032 FFF7FEFF 		bl	CyEnterCriticalSection
 372              	.LVL14:
 169:.\Generated_Source\PSoC4/PWM_2.c **** 
 373              		.loc 1 169 0
 374 0036 2278     		ldrb	r2, [r4]
 375 0038 1023     		mov	r3, #16
 376 003a 1343     		orr	r3, r2
 377 003c 2370     		strb	r3, [r4]
 172:.\Generated_Source\PSoC4/PWM_2.c **** 
 378              		.loc 1 172 0
 379 003e FFF7FEFF 		bl	CyExitCriticalSection
 380              	.LVL15:
 176:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UseStatus) */
 381              		.loc 1 176 0
 382 0042 FFF7FEFF 		bl	PWM_2_ClearFIFO
 383              	.LVL16:
 179:.\Generated_Source\PSoC4/PWM_2.c **** 
 384              		.loc 1 179 0
 385              		@ sp needed
 386 0046 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 22


 387              	.L39:
 388              		.align	2
 389              	.L38:
 390 0048 73000F40 		.word	1074724979
 391 004c 93000F40 		.word	1074725011
 392              		.cfi_endproc
 393              	.LFE3:
 394              		.size	PWM_2_Init, .-PWM_2_Init
 395              		.section	.text.PWM_2_Start,"ax",%progbits
 396              		.align	2
 397              		.global	PWM_2_Start
 398              		.code	16
 399              		.thumb_func
 400              		.type	PWM_2_Start, %function
 401              	PWM_2_Start:
 402              	.LFB2:
  56:.\Generated_Source\PSoC4/PWM_2.c ****     /* If not Initialized then initialize all required hardware and software */
 403              		.loc 1 56 0
 404              		.cfi_startproc
 405 0000 08B5     		push	{r3, lr}
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 3, -8
 408              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC4/PWM_2.c ****     {
 409              		.loc 1 58 0
 410 0002 064B     		ldr	r3, .L42
 411 0004 1B78     		ldrb	r3, [r3]
 412 0006 002B     		cmp	r3, #0
 413 0008 04D1     		bne	.L41
  60:.\Generated_Source\PSoC4/PWM_2.c ****         PWM_2_initVar = 1u;
 414              		.loc 1 60 0
 415 000a FFF7FEFF 		bl	PWM_2_Init
 416              	.LVL17:
  61:.\Generated_Source\PSoC4/PWM_2.c ****     }
 417              		.loc 1 61 0
 418 000e 0122     		mov	r2, #1
 419 0010 024B     		ldr	r3, .L42
 420 0012 1A70     		strb	r2, [r3]
 421              	.L41:
  63:.\Generated_Source\PSoC4/PWM_2.c **** 
 422              		.loc 1 63 0
 423 0014 FFF7FEFF 		bl	PWM_2_Enable
 424              	.LVL18:
  65:.\Generated_Source\PSoC4/PWM_2.c **** 
 425              		.loc 1 65 0
 426              		@ sp needed
 427 0018 08BD     		pop	{r3, pc}
 428              	.L43:
 429 001a C046     		.align	2
 430              	.L42:
 431 001c 00000000 		.word	.LANCHOR0
 432              		.cfi_endproc
 433              	.LFE2:
 434              		.size	PWM_2_Start, .-PWM_2_Start
 435              		.section	.text.PWM_2_ReadCompare,"ax",%progbits
 436              		.align	2
 437              		.global	PWM_2_ReadCompare
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 23


 438              		.code	16
 439              		.thumb_func
 440              		.type	PWM_2_ReadCompare, %function
 441              	PWM_2_ReadCompare:
 442              	.LFB16:
 794:.\Generated_Source\PSoC4/PWM_2.c **** 
 795:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* (!PWM_2_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/PWM_2.c **** 
 797:.\Generated_Source\PSoC4/PWM_2.c **** 
 798:.\Generated_Source\PSoC4/PWM_2.c **** #if (PWM_2_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/PWM_2.c **** 
 800:.\Generated_Source\PSoC4/PWM_2.c **** 
 801:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_ReadCompare
 803:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/PWM_2.c ****     *
 805:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 806:.\Generated_Source\PSoC4/PWM_2.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/PWM_2.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/PWM_2.c ****     *
 809:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 811:.\Generated_Source\PSoC4/PWM_2.c ****     *
 812:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 813:.\Generated_Source\PSoC4/PWM_2.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/PWM_2.c ****     *
 815:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/PWM_2.c ****     uint8 PWM_2_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/PWM_2.c ****     {
 443              		.loc 1 817 0
 444              		.cfi_startproc
 818:.\Generated_Source\PSoC4/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/PWM_2.c ****             return ((uint8)CY_GET_REG16(PWM_2_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/PWM_2.c ****         #else
 821:.\Generated_Source\PSoC4/PWM_2.c ****             return (CY_GET_REG8(PWM_2_COMPARE1_LSB_PTR));
 445              		.loc 1 821 0
 446 0000 014B     		ldr	r3, .L45
 447 0002 1878     		ldrb	r0, [r3]
 448 0004 C0B2     		uxtb	r0, r0
 822:.\Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/PWM_2.c ****     }
 449              		.loc 1 823 0
 450              		@ sp needed
 451 0006 7047     		bx	lr
 452              	.L46:
 453              		.align	2
 454              	.L45:
 455 0008 23000F40 		.word	1074724899
 456              		.cfi_endproc
 457              	.LFE16:
 458              		.size	PWM_2_ReadCompare, .-PWM_2_ReadCompare
 459              		.section	.text.PWM_2_ReadPeriod,"ax",%progbits
 460              		.align	2
 461              		.global	PWM_2_ReadPeriod
 462              		.code	16
 463              		.thumb_func
 464              		.type	PWM_2_ReadPeriod, %function
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 24


 465              	PWM_2_ReadPeriod:
 466              	.LFB17:
 824:.\Generated_Source\PSoC4/PWM_2.c **** 
 825:.\Generated_Source\PSoC4/PWM_2.c **** #else
 826:.\Generated_Source\PSoC4/PWM_2.c **** 
 827:.\Generated_Source\PSoC4/PWM_2.c **** 
 828:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_ReadCompare1
 830:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/PWM_2.c ****     *
 832:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 833:.\Generated_Source\PSoC4/PWM_2.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/PWM_2.c ****     *
 835:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 837:.\Generated_Source\PSoC4/PWM_2.c ****     *
 838:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 839:.\Generated_Source\PSoC4/PWM_2.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/PWM_2.c ****     *
 841:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/PWM_2.c ****     uint8 PWM_2_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/PWM_2.c ****     {
 844:.\Generated_Source\PSoC4/PWM_2.c ****         return (CY_GET_REG8(PWM_2_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC4/PWM_2.c ****     }
 846:.\Generated_Source\PSoC4/PWM_2.c **** 
 847:.\Generated_Source\PSoC4/PWM_2.c **** 
 848:.\Generated_Source\PSoC4/PWM_2.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/PWM_2.c ****     * Function Name: PWM_2_ReadCompare2
 850:.\Generated_Source\PSoC4/PWM_2.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/PWM_2.c ****     *
 852:.\Generated_Source\PSoC4/PWM_2.c ****     * Summary:
 853:.\Generated_Source\PSoC4/PWM_2.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/PWM_2.c ****     *
 855:.\Generated_Source\PSoC4/PWM_2.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/PWM_2.c ****     *  None
 857:.\Generated_Source\PSoC4/PWM_2.c ****     *
 858:.\Generated_Source\PSoC4/PWM_2.c ****     * Return:
 859:.\Generated_Source\PSoC4/PWM_2.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/PWM_2.c ****     *
 861:.\Generated_Source\PSoC4/PWM_2.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/PWM_2.c ****     uint8 PWM_2_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/PWM_2.c ****     {
 864:.\Generated_Source\PSoC4/PWM_2.c ****         return (CY_GET_REG8(PWM_2_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC4/PWM_2.c ****     }
 866:.\Generated_Source\PSoC4/PWM_2.c **** 
 867:.\Generated_Source\PSoC4/PWM_2.c **** #endif /* (PWM_2_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/PWM_2.c **** 
 869:.\Generated_Source\PSoC4/PWM_2.c **** 
 870:.\Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_ReadPeriod
 872:.\Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/PWM_2.c **** *
 874:.\Generated_Source\PSoC4/PWM_2.c **** * Summary:
 875:.\Generated_Source\PSoC4/PWM_2.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/PWM_2.c **** *
 877:.\Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 878:.\Generated_Source\PSoC4/PWM_2.c **** *  None
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 25


 879:.\Generated_Source\PSoC4/PWM_2.c **** *
 880:.\Generated_Source\PSoC4/PWM_2.c **** * Return:
 881:.\Generated_Source\PSoC4/PWM_2.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/PWM_2.c **** *
 883:.\Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/PWM_2.c **** uint8 PWM_2_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/PWM_2.c **** {
 467              		.loc 1 885 0
 468              		.cfi_startproc
 886:.\Generated_Source\PSoC4/PWM_2.c ****     #if(PWM_2_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/PWM_2.c ****         return ((uint8)CY_GET_REG16(PWM_2_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/PWM_2.c ****     #else
 889:.\Generated_Source\PSoC4/PWM_2.c ****         return (CY_GET_REG8(PWM_2_PERIOD_LSB_PTR));
 469              		.loc 1 889 0
 470 0000 014B     		ldr	r3, .L48
 471 0002 1878     		ldrb	r0, [r3]
 472 0004 C0B2     		uxtb	r0, r0
 890:.\Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/PWM_2.c **** }
 473              		.loc 1 891 0
 474              		@ sp needed
 475 0006 7047     		bx	lr
 476              	.L49:
 477              		.align	2
 478              	.L48:
 479 0008 43000F40 		.word	1074724931
 480              		.cfi_endproc
 481              	.LFE17:
 482              		.size	PWM_2_ReadPeriod, .-PWM_2_ReadPeriod
 483              		.global	PWM_2_initVar
 484              		.bss
 485              		.set	.LANCHOR0,. + 0
 486              		.type	PWM_2_initVar, %object
 487              		.size	PWM_2_initVar, 1
 488              	PWM_2_initVar:
 489 0000 00       		.space	1
 490              		.text
 491              	.Letext0:
 492              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 493              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 494              		.section	.debug_info,"",%progbits
 495              	.Ldebug_info0:
 496 0000 2B030000 		.4byte	0x32b
 497 0004 0400     		.2byte	0x4
 498 0006 00000000 		.4byte	.Ldebug_abbrev0
 499 000a 04       		.byte	0x4
 500 000b 01       		.uleb128 0x1
 501 000c F2010000 		.4byte	.LASF38
 502 0010 01       		.byte	0x1
 503 0011 46000000 		.4byte	.LASF39
 504 0015 BE020000 		.4byte	.LASF40
 505 0019 00000000 		.4byte	.Ldebug_ranges0+0
 506 001d 00000000 		.4byte	0
 507 0021 00000000 		.4byte	.Ldebug_line0
 508 0025 02       		.uleb128 0x2
 509 0026 01       		.byte	0x1
 510 0027 06       		.byte	0x6
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 26


 511 0028 2A030000 		.4byte	.LASF0
 512 002c 02       		.uleb128 0x2
 513 002d 01       		.byte	0x1
 514 002e 08       		.byte	0x8
 515 002f C3000000 		.4byte	.LASF1
 516 0033 02       		.uleb128 0x2
 517 0034 02       		.byte	0x2
 518 0035 05       		.byte	0x5
 519 0036 97020000 		.4byte	.LASF2
 520 003a 02       		.uleb128 0x2
 521 003b 02       		.byte	0x2
 522 003c 07       		.byte	0x7
 523 003d 6E000000 		.4byte	.LASF3
 524 0041 02       		.uleb128 0x2
 525 0042 04       		.byte	0x4
 526 0043 05       		.byte	0x5
 527 0044 05030000 		.4byte	.LASF4
 528 0048 02       		.uleb128 0x2
 529 0049 04       		.byte	0x4
 530 004a 07       		.byte	0x7
 531 004b D6000000 		.4byte	.LASF5
 532 004f 02       		.uleb128 0x2
 533 0050 08       		.byte	0x8
 534 0051 05       		.byte	0x5
 535 0052 00000000 		.4byte	.LASF6
 536 0056 02       		.uleb128 0x2
 537 0057 08       		.byte	0x8
 538 0058 07       		.byte	0x7
 539 0059 AC000000 		.4byte	.LASF7
 540 005d 03       		.uleb128 0x3
 541 005e 04       		.byte	0x4
 542 005f 05       		.byte	0x5
 543 0060 696E7400 		.ascii	"int\000"
 544 0064 02       		.uleb128 0x2
 545 0065 04       		.byte	0x4
 546 0066 07       		.byte	0x7
 547 0067 49010000 		.4byte	.LASF8
 548 006b 04       		.uleb128 0x4
 549 006c E8000000 		.4byte	.LASF12
 550 0070 02       		.byte	0x2
 551 0071 9801     		.2byte	0x198
 552 0073 2C000000 		.4byte	0x2c
 553 0077 02       		.uleb128 0x2
 554 0078 04       		.byte	0x4
 555 0079 04       		.byte	0x4
 556 007a 9E000000 		.4byte	.LASF9
 557 007e 02       		.uleb128 0x2
 558 007f 08       		.byte	0x8
 559 0080 04       		.byte	0x4
 560 0081 23010000 		.4byte	.LASF10
 561 0085 02       		.uleb128 0x2
 562 0086 01       		.byte	0x1
 563 0087 08       		.byte	0x8
 564 0088 28000000 		.4byte	.LASF11
 565 008c 04       		.uleb128 0x4
 566 008d D1000000 		.4byte	.LASF13
 567 0091 02       		.byte	0x2
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 27


 568 0092 4202     		.2byte	0x242
 569 0094 98000000 		.4byte	0x98
 570 0098 05       		.uleb128 0x5
 571 0099 6B000000 		.4byte	0x6b
 572 009d 02       		.uleb128 0x2
 573 009e 04       		.byte	0x4
 574 009f 07       		.byte	0x7
 575 00a0 B4010000 		.4byte	.LASF14
 576 00a4 06       		.uleb128 0x6
 577 00a5 B1020000 		.4byte	.LASF15
 578 00a9 01       		.byte	0x1
 579 00aa C7       		.byte	0xc7
 580 00ab 00000000 		.4byte	.LFB4
 581 00af 10000000 		.4byte	.LFE4-.LFB4
 582 00b3 01       		.uleb128 0x1
 583 00b4 9C       		.byte	0x9c
 584 00b5 06       		.uleb128 0x6
 585 00b6 81000000 		.4byte	.LASF16
 586 00ba 01       		.byte	0x1
 587 00bb E9       		.byte	0xe9
 588 00bc 00000000 		.4byte	.LFB5
 589 00c0 10000000 		.4byte	.LFE5-.LFB5
 590 00c4 01       		.uleb128 0x1
 591 00c5 9C       		.byte	0x9c
 592 00c6 07       		.uleb128 0x7
 593 00c7 56010000 		.4byte	.LASF17
 594 00cb 01       		.byte	0x1
 595 00cc 9301     		.2byte	0x193
 596 00ce 00000000 		.4byte	.LFB6
 597 00d2 0C000000 		.4byte	.LFE6-.LFB6
 598 00d6 01       		.uleb128 0x1
 599 00d7 9C       		.byte	0x9c
 600 00d8 EB000000 		.4byte	0xeb
 601 00dc 08       		.uleb128 0x8
 602 00dd A4000000 		.4byte	.LASF19
 603 00e1 01       		.byte	0x1
 604 00e2 9301     		.2byte	0x193
 605 00e4 6B000000 		.4byte	0x6b
 606 00e8 01       		.uleb128 0x1
 607 00e9 50       		.byte	0x50
 608 00ea 00       		.byte	0
 609 00eb 09       		.uleb128 0x9
 610 00ec 11010000 		.4byte	.LASF25
 611 00f0 01       		.byte	0x1
 612 00f1 A901     		.2byte	0x1a9
 613 00f3 6B000000 		.4byte	0x6b
 614 00f7 00000000 		.4byte	.LFB7
 615 00fb 14000000 		.4byte	.LFE7-.LFB7
 616 00ff 01       		.uleb128 0x1
 617 0100 9C       		.byte	0x9c
 618 0101 07       		.uleb128 0x7
 619 0102 BD010000 		.4byte	.LASF18
 620 0106 01       		.byte	0x1
 621 0107 E201     		.2byte	0x1e2
 622 0109 00000000 		.4byte	.LFB9
 623 010d 0C000000 		.4byte	.LFE9-.LFB9
 624 0111 01       		.uleb128 0x1
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 28


 625 0112 9C       		.byte	0x9c
 626 0113 26010000 		.4byte	0x126
 627 0117 08       		.uleb128 0x8
 628 0118 67000000 		.4byte	.LASF20
 629 011c 01       		.byte	0x1
 630 011d E201     		.2byte	0x1e2
 631 011f 6B000000 		.4byte	0x6b
 632 0123 01       		.uleb128 0x1
 633 0124 50       		.byte	0x50
 634 0125 00       		.byte	0
 635 0126 07       		.uleb128 0x7
 636 0127 36010000 		.4byte	.LASF21
 637 012b 01       		.byte	0x1
 638 012c 0402     		.2byte	0x204
 639 012e 00000000 		.4byte	.LFB10
 640 0132 0C000000 		.4byte	.LFE10-.LFB10
 641 0136 01       		.uleb128 0x1
 642 0137 9C       		.byte	0x9c
 643 0138 4B010000 		.4byte	0x14b
 644 013c 08       		.uleb128 0x8
 645 013d 36030000 		.4byte	.LASF22
 646 0141 01       		.byte	0x1
 647 0142 0402     		.2byte	0x204
 648 0144 6B000000 		.4byte	0x6b
 649 0148 01       		.uleb128 0x1
 650 0149 50       		.byte	0x50
 651 014a 00       		.byte	0
 652 014b 07       		.uleb128 0x7
 653 014c 80020000 		.4byte	.LASF23
 654 0150 01       		.byte	0x1
 655 0151 AC02     		.2byte	0x2ac
 656 0153 00000000 		.4byte	.LFB11
 657 0157 0C000000 		.4byte	.LFE11-.LFB11
 658 015b 01       		.uleb128 0x1
 659 015c 9C       		.byte	0x9c
 660 015d 70010000 		.4byte	0x170
 661 0161 08       		.uleb128 0x8
 662 0162 CF010000 		.4byte	.LASF24
 663 0166 01       		.byte	0x1
 664 0167 AC02     		.2byte	0x2ac
 665 0169 6B000000 		.4byte	0x6b
 666 016d 01       		.uleb128 0x1
 667 016e 50       		.byte	0x50
 668 016f 00       		.byte	0
 669 0170 09       		.uleb128 0x9
 670 0171 7F010000 		.4byte	.LASF26
 671 0175 01       		.byte	0x1
 672 0176 C702     		.2byte	0x2c7
 673 0178 6B000000 		.4byte	0x6b
 674 017c 00000000 		.4byte	.LFB12
 675 0180 0C000000 		.4byte	.LFE12-.LFB12
 676 0184 01       		.uleb128 0x1
 677 0185 9C       		.byte	0x9c
 678 0186 0A       		.uleb128 0xa
 679 0187 0E000000 		.4byte	.LASF41
 680 018b 01       		.byte	0x1
 681 018c E102     		.2byte	0x2e1
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 29


 682 018e 6B000000 		.4byte	0x6b
 683 0192 00000000 		.4byte	.LFB13
 684 0196 0C000000 		.4byte	.LFE13-.LFB13
 685 019a 01       		.uleb128 0x1
 686 019b 9C       		.byte	0x9c
 687 019c AF010000 		.4byte	0x1af
 688 01a0 0B       		.uleb128 0xb
 689 01a1 3F000000 		.4byte	.LASF32
 690 01a5 01       		.byte	0x1
 691 01a6 E302     		.2byte	0x2e3
 692 01a8 6B000000 		.4byte	0x6b
 693 01ac 01       		.uleb128 0x1
 694 01ad 50       		.byte	0x50
 695 01ae 00       		.byte	0
 696 01af 07       		.uleb128 0x7
 697 01b0 F6000000 		.4byte	.LASF27
 698 01b4 01       		.byte	0x1
 699 01b5 FD02     		.2byte	0x2fd
 700 01b7 00000000 		.4byte	.LFB14
 701 01bb 0C000000 		.4byte	.LFE14-.LFB14
 702 01bf 01       		.uleb128 0x1
 703 01c0 9C       		.byte	0x9c
 704 01c1 D4010000 		.4byte	0x1d4
 705 01c5 08       		.uleb128 0x8
 706 01c6 EE000000 		.4byte	.LASF28
 707 01ca 01       		.byte	0x1
 708 01cb FD02     		.2byte	0x2fd
 709 01cd 6B000000 		.4byte	0x6b
 710 01d1 01       		.uleb128 0x1
 711 01d2 50       		.byte	0x50
 712 01d3 00       		.byte	0
 713 01d4 09       		.uleb128 0x9
 714 01d5 8C000000 		.4byte	.LASF29
 715 01d9 01       		.byte	0x1
 716 01da 1603     		.2byte	0x316
 717 01dc 6B000000 		.4byte	0x6b
 718 01e0 00000000 		.4byte	.LFB15
 719 01e4 0C000000 		.4byte	.LFE15-.LFB15
 720 01e8 01       		.uleb128 0x1
 721 01e9 9C       		.byte	0x9c
 722 01ea 07       		.uleb128 0x7
 723 01eb A1020000 		.4byte	.LASF30
 724 01ef 01       		.byte	0x1
 725 01f0 C501     		.2byte	0x1c5
 726 01f2 00000000 		.4byte	.LFB8
 727 01f6 12000000 		.4byte	.LFE8-.LFB8
 728 01fa 01       		.uleb128 0x1
 729 01fb 9C       		.byte	0x9c
 730 01fc 13020000 		.4byte	0x213
 731 0200 0C       		.uleb128 0xc
 732 0201 08000000 		.4byte	.LVL6
 733 0205 D4010000 		.4byte	0x1d4
 734 0209 0C       		.uleb128 0xc
 735 020a 0C000000 		.4byte	.LVL7
 736 020e 70010000 		.4byte	0x170
 737 0212 00       		.byte	0
 738 0213 0D       		.uleb128 0xd
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 30


 739 0214 1F030000 		.4byte	.LASF31
 740 0218 01       		.byte	0x1
 741 0219 54       		.byte	0x54
 742 021a 00000000 		.4byte	.LFB3
 743 021e 50000000 		.4byte	.LFE3-.LFB3
 744 0222 01       		.uleb128 0x1
 745 0223 9C       		.byte	0x9c
 746 0224 B1020000 		.4byte	0x2b1
 747 0228 0E       		.uleb128 0xe
 748 0229 AF010000 		.4byte	.LASF33
 749 022d 01       		.byte	0x1
 750 022e 57       		.byte	0x57
 751 022f 6B000000 		.4byte	0x6b
 752 0233 00000000 		.4byte	.LLST0
 753 0237 0E       		.uleb128 0xe
 754 0238 DD010000 		.4byte	.LASF34
 755 023c 01       		.byte	0x1
 756 023d 5D       		.byte	0x5d
 757 023e 6B000000 		.4byte	0x6b
 758 0242 13000000 		.4byte	.LLST1
 759 0246 0F       		.uleb128 0xf
 760 0247 20000000 		.4byte	.LVL10
 761 024b C6000000 		.4byte	0xc6
 762 024f 5A020000 		.4byte	0x25a
 763 0253 10       		.uleb128 0x10
 764 0254 01       		.uleb128 0x1
 765 0255 50       		.byte	0x50
 766 0256 02       		.uleb128 0x2
 767 0257 09       		.byte	0x9
 768 0258 FF       		.byte	0xff
 769 0259 00       		.byte	0
 770 025a 0F       		.uleb128 0xf
 771 025b 26000000 		.4byte	.LVL11
 772 025f 01010000 		.4byte	0x101
 773 0263 6E020000 		.4byte	0x26e
 774 0267 10       		.uleb128 0x10
 775 0268 01       		.uleb128 0x1
 776 0269 50       		.byte	0x50
 777 026a 02       		.uleb128 0x2
 778 026b 09       		.byte	0x9
 779 026c FF       		.byte	0xff
 780 026d 00       		.byte	0
 781 026e 0F       		.uleb128 0xf
 782 026f 2C000000 		.4byte	.LVL12
 783 0273 26010000 		.4byte	0x126
 784 0277 82020000 		.4byte	0x282
 785 027b 10       		.uleb128 0x10
 786 027c 01       		.uleb128 0x1
 787 027d 50       		.byte	0x50
 788 027e 02       		.uleb128 0x2
 789 027f 08       		.byte	0x8
 790 0280 7F       		.byte	0x7f
 791 0281 00       		.byte	0
 792 0282 0F       		.uleb128 0xf
 793 0283 32000000 		.4byte	.LVL13
 794 0287 4B010000 		.4byte	0x14b
 795 028b 95020000 		.4byte	0x295
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 31


 796 028f 10       		.uleb128 0x10
 797 0290 01       		.uleb128 0x1
 798 0291 50       		.byte	0x50
 799 0292 01       		.uleb128 0x1
 800 0293 30       		.byte	0x30
 801 0294 00       		.byte	0
 802 0295 0C       		.uleb128 0xc
 803 0296 36000000 		.4byte	.LVL14
 804 029a 16030000 		.4byte	0x316
 805 029e 0C       		.uleb128 0xc
 806 029f 42000000 		.4byte	.LVL15
 807 02a3 21030000 		.4byte	0x321
 808 02a7 0C       		.uleb128 0xc
 809 02a8 46000000 		.4byte	.LVL16
 810 02ac EA010000 		.4byte	0x1ea
 811 02b0 00       		.byte	0
 812 02b1 0D       		.uleb128 0xd
 813 02b2 2A010000 		.4byte	.LASF35
 814 02b6 01       		.byte	0x1
 815 02b7 37       		.byte	0x37
 816 02b8 00000000 		.4byte	.LFB2
 817 02bc 20000000 		.4byte	.LFE2-.LFB2
 818 02c0 01       		.uleb128 0x1
 819 02c1 9C       		.byte	0x9c
 820 02c2 D9020000 		.4byte	0x2d9
 821 02c6 0C       		.uleb128 0xc
 822 02c7 0E000000 		.4byte	.LVL17
 823 02cb 13020000 		.4byte	0x213
 824 02cf 0C       		.uleb128 0xc
 825 02d0 18000000 		.4byte	.LVL18
 826 02d4 A4000000 		.4byte	0xa4
 827 02d8 00       		.byte	0
 828 02d9 09       		.uleb128 0x9
 829 02da 2D000000 		.4byte	.LASF36
 830 02de 01       		.byte	0x1
 831 02df 3003     		.2byte	0x330
 832 02e1 6B000000 		.4byte	0x6b
 833 02e5 00000000 		.4byte	.LFB16
 834 02e9 0C000000 		.4byte	.LFE16-.LFB16
 835 02ed 01       		.uleb128 0x1
 836 02ee 9C       		.byte	0x9c
 837 02ef 09       		.uleb128 0x9
 838 02f0 0E030000 		.4byte	.LASF37
 839 02f4 01       		.byte	0x1
 840 02f5 7403     		.2byte	0x374
 841 02f7 6B000000 		.4byte	0x6b
 842 02fb 00000000 		.4byte	.LFB17
 843 02ff 0C000000 		.4byte	.LFE17-.LFB17
 844 0303 01       		.uleb128 0x1
 845 0304 9C       		.byte	0x9c
 846 0305 11       		.uleb128 0x11
 847 0306 3E030000 		.4byte	.LASF42
 848 030a 01       		.byte	0x1
 849 030b 20       		.byte	0x20
 850 030c 6B000000 		.4byte	0x6b
 851 0310 05       		.uleb128 0x5
 852 0311 03       		.byte	0x3
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 32


 853 0312 00000000 		.4byte	PWM_2_initVar
 854 0316 12       		.uleb128 0x12
 855 0317 98010000 		.4byte	.LASF43
 856 031b 03       		.byte	0x3
 857 031c E3       		.byte	0xe3
 858 031d 6B000000 		.4byte	0x6b
 859 0321 13       		.uleb128 0x13
 860 0322 69010000 		.4byte	.LASF44
 861 0326 03       		.byte	0x3
 862 0327 E4       		.byte	0xe4
 863 0328 14       		.uleb128 0x14
 864 0329 6B000000 		.4byte	0x6b
 865 032d 00       		.byte	0
 866 032e 00       		.byte	0
 867              		.section	.debug_abbrev,"",%progbits
 868              	.Ldebug_abbrev0:
 869 0000 01       		.uleb128 0x1
 870 0001 11       		.uleb128 0x11
 871 0002 01       		.byte	0x1
 872 0003 25       		.uleb128 0x25
 873 0004 0E       		.uleb128 0xe
 874 0005 13       		.uleb128 0x13
 875 0006 0B       		.uleb128 0xb
 876 0007 03       		.uleb128 0x3
 877 0008 0E       		.uleb128 0xe
 878 0009 1B       		.uleb128 0x1b
 879 000a 0E       		.uleb128 0xe
 880 000b 55       		.uleb128 0x55
 881 000c 17       		.uleb128 0x17
 882 000d 11       		.uleb128 0x11
 883 000e 01       		.uleb128 0x1
 884 000f 10       		.uleb128 0x10
 885 0010 17       		.uleb128 0x17
 886 0011 00       		.byte	0
 887 0012 00       		.byte	0
 888 0013 02       		.uleb128 0x2
 889 0014 24       		.uleb128 0x24
 890 0015 00       		.byte	0
 891 0016 0B       		.uleb128 0xb
 892 0017 0B       		.uleb128 0xb
 893 0018 3E       		.uleb128 0x3e
 894 0019 0B       		.uleb128 0xb
 895 001a 03       		.uleb128 0x3
 896 001b 0E       		.uleb128 0xe
 897 001c 00       		.byte	0
 898 001d 00       		.byte	0
 899 001e 03       		.uleb128 0x3
 900 001f 24       		.uleb128 0x24
 901 0020 00       		.byte	0
 902 0021 0B       		.uleb128 0xb
 903 0022 0B       		.uleb128 0xb
 904 0023 3E       		.uleb128 0x3e
 905 0024 0B       		.uleb128 0xb
 906 0025 03       		.uleb128 0x3
 907 0026 08       		.uleb128 0x8
 908 0027 00       		.byte	0
 909 0028 00       		.byte	0
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 33


 910 0029 04       		.uleb128 0x4
 911 002a 16       		.uleb128 0x16
 912 002b 00       		.byte	0
 913 002c 03       		.uleb128 0x3
 914 002d 0E       		.uleb128 0xe
 915 002e 3A       		.uleb128 0x3a
 916 002f 0B       		.uleb128 0xb
 917 0030 3B       		.uleb128 0x3b
 918 0031 05       		.uleb128 0x5
 919 0032 49       		.uleb128 0x49
 920 0033 13       		.uleb128 0x13
 921 0034 00       		.byte	0
 922 0035 00       		.byte	0
 923 0036 05       		.uleb128 0x5
 924 0037 35       		.uleb128 0x35
 925 0038 00       		.byte	0
 926 0039 49       		.uleb128 0x49
 927 003a 13       		.uleb128 0x13
 928 003b 00       		.byte	0
 929 003c 00       		.byte	0
 930 003d 06       		.uleb128 0x6
 931 003e 2E       		.uleb128 0x2e
 932 003f 00       		.byte	0
 933 0040 3F       		.uleb128 0x3f
 934 0041 19       		.uleb128 0x19
 935 0042 03       		.uleb128 0x3
 936 0043 0E       		.uleb128 0xe
 937 0044 3A       		.uleb128 0x3a
 938 0045 0B       		.uleb128 0xb
 939 0046 3B       		.uleb128 0x3b
 940 0047 0B       		.uleb128 0xb
 941 0048 27       		.uleb128 0x27
 942 0049 19       		.uleb128 0x19
 943 004a 11       		.uleb128 0x11
 944 004b 01       		.uleb128 0x1
 945 004c 12       		.uleb128 0x12
 946 004d 06       		.uleb128 0x6
 947 004e 40       		.uleb128 0x40
 948 004f 18       		.uleb128 0x18
 949 0050 9742     		.uleb128 0x2117
 950 0052 19       		.uleb128 0x19
 951 0053 00       		.byte	0
 952 0054 00       		.byte	0
 953 0055 07       		.uleb128 0x7
 954 0056 2E       		.uleb128 0x2e
 955 0057 01       		.byte	0x1
 956 0058 3F       		.uleb128 0x3f
 957 0059 19       		.uleb128 0x19
 958 005a 03       		.uleb128 0x3
 959 005b 0E       		.uleb128 0xe
 960 005c 3A       		.uleb128 0x3a
 961 005d 0B       		.uleb128 0xb
 962 005e 3B       		.uleb128 0x3b
 963 005f 05       		.uleb128 0x5
 964 0060 27       		.uleb128 0x27
 965 0061 19       		.uleb128 0x19
 966 0062 11       		.uleb128 0x11
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 34


 967 0063 01       		.uleb128 0x1
 968 0064 12       		.uleb128 0x12
 969 0065 06       		.uleb128 0x6
 970 0066 40       		.uleb128 0x40
 971 0067 18       		.uleb128 0x18
 972 0068 9742     		.uleb128 0x2117
 973 006a 19       		.uleb128 0x19
 974 006b 01       		.uleb128 0x1
 975 006c 13       		.uleb128 0x13
 976 006d 00       		.byte	0
 977 006e 00       		.byte	0
 978 006f 08       		.uleb128 0x8
 979 0070 05       		.uleb128 0x5
 980 0071 00       		.byte	0
 981 0072 03       		.uleb128 0x3
 982 0073 0E       		.uleb128 0xe
 983 0074 3A       		.uleb128 0x3a
 984 0075 0B       		.uleb128 0xb
 985 0076 3B       		.uleb128 0x3b
 986 0077 05       		.uleb128 0x5
 987 0078 49       		.uleb128 0x49
 988 0079 13       		.uleb128 0x13
 989 007a 02       		.uleb128 0x2
 990 007b 18       		.uleb128 0x18
 991 007c 00       		.byte	0
 992 007d 00       		.byte	0
 993 007e 09       		.uleb128 0x9
 994 007f 2E       		.uleb128 0x2e
 995 0080 00       		.byte	0
 996 0081 3F       		.uleb128 0x3f
 997 0082 19       		.uleb128 0x19
 998 0083 03       		.uleb128 0x3
 999 0084 0E       		.uleb128 0xe
 1000 0085 3A       		.uleb128 0x3a
 1001 0086 0B       		.uleb128 0xb
 1002 0087 3B       		.uleb128 0x3b
 1003 0088 05       		.uleb128 0x5
 1004 0089 27       		.uleb128 0x27
 1005 008a 19       		.uleb128 0x19
 1006 008b 49       		.uleb128 0x49
 1007 008c 13       		.uleb128 0x13
 1008 008d 11       		.uleb128 0x11
 1009 008e 01       		.uleb128 0x1
 1010 008f 12       		.uleb128 0x12
 1011 0090 06       		.uleb128 0x6
 1012 0091 40       		.uleb128 0x40
 1013 0092 18       		.uleb128 0x18
 1014 0093 9742     		.uleb128 0x2117
 1015 0095 19       		.uleb128 0x19
 1016 0096 00       		.byte	0
 1017 0097 00       		.byte	0
 1018 0098 0A       		.uleb128 0xa
 1019 0099 2E       		.uleb128 0x2e
 1020 009a 01       		.byte	0x1
 1021 009b 3F       		.uleb128 0x3f
 1022 009c 19       		.uleb128 0x19
 1023 009d 03       		.uleb128 0x3
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 35


 1024 009e 0E       		.uleb128 0xe
 1025 009f 3A       		.uleb128 0x3a
 1026 00a0 0B       		.uleb128 0xb
 1027 00a1 3B       		.uleb128 0x3b
 1028 00a2 05       		.uleb128 0x5
 1029 00a3 27       		.uleb128 0x27
 1030 00a4 19       		.uleb128 0x19
 1031 00a5 49       		.uleb128 0x49
 1032 00a6 13       		.uleb128 0x13
 1033 00a7 11       		.uleb128 0x11
 1034 00a8 01       		.uleb128 0x1
 1035 00a9 12       		.uleb128 0x12
 1036 00aa 06       		.uleb128 0x6
 1037 00ab 40       		.uleb128 0x40
 1038 00ac 18       		.uleb128 0x18
 1039 00ad 9742     		.uleb128 0x2117
 1040 00af 19       		.uleb128 0x19
 1041 00b0 01       		.uleb128 0x1
 1042 00b1 13       		.uleb128 0x13
 1043 00b2 00       		.byte	0
 1044 00b3 00       		.byte	0
 1045 00b4 0B       		.uleb128 0xb
 1046 00b5 34       		.uleb128 0x34
 1047 00b6 00       		.byte	0
 1048 00b7 03       		.uleb128 0x3
 1049 00b8 0E       		.uleb128 0xe
 1050 00b9 3A       		.uleb128 0x3a
 1051 00ba 0B       		.uleb128 0xb
 1052 00bb 3B       		.uleb128 0x3b
 1053 00bc 05       		.uleb128 0x5
 1054 00bd 49       		.uleb128 0x49
 1055 00be 13       		.uleb128 0x13
 1056 00bf 02       		.uleb128 0x2
 1057 00c0 18       		.uleb128 0x18
 1058 00c1 00       		.byte	0
 1059 00c2 00       		.byte	0
 1060 00c3 0C       		.uleb128 0xc
 1061 00c4 898201   		.uleb128 0x4109
 1062 00c7 00       		.byte	0
 1063 00c8 11       		.uleb128 0x11
 1064 00c9 01       		.uleb128 0x1
 1065 00ca 31       		.uleb128 0x31
 1066 00cb 13       		.uleb128 0x13
 1067 00cc 00       		.byte	0
 1068 00cd 00       		.byte	0
 1069 00ce 0D       		.uleb128 0xd
 1070 00cf 2E       		.uleb128 0x2e
 1071 00d0 01       		.byte	0x1
 1072 00d1 3F       		.uleb128 0x3f
 1073 00d2 19       		.uleb128 0x19
 1074 00d3 03       		.uleb128 0x3
 1075 00d4 0E       		.uleb128 0xe
 1076 00d5 3A       		.uleb128 0x3a
 1077 00d6 0B       		.uleb128 0xb
 1078 00d7 3B       		.uleb128 0x3b
 1079 00d8 0B       		.uleb128 0xb
 1080 00d9 27       		.uleb128 0x27
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 36


 1081 00da 19       		.uleb128 0x19
 1082 00db 11       		.uleb128 0x11
 1083 00dc 01       		.uleb128 0x1
 1084 00dd 12       		.uleb128 0x12
 1085 00de 06       		.uleb128 0x6
 1086 00df 40       		.uleb128 0x40
 1087 00e0 18       		.uleb128 0x18
 1088 00e1 9742     		.uleb128 0x2117
 1089 00e3 19       		.uleb128 0x19
 1090 00e4 01       		.uleb128 0x1
 1091 00e5 13       		.uleb128 0x13
 1092 00e6 00       		.byte	0
 1093 00e7 00       		.byte	0
 1094 00e8 0E       		.uleb128 0xe
 1095 00e9 34       		.uleb128 0x34
 1096 00ea 00       		.byte	0
 1097 00eb 03       		.uleb128 0x3
 1098 00ec 0E       		.uleb128 0xe
 1099 00ed 3A       		.uleb128 0x3a
 1100 00ee 0B       		.uleb128 0xb
 1101 00ef 3B       		.uleb128 0x3b
 1102 00f0 0B       		.uleb128 0xb
 1103 00f1 49       		.uleb128 0x49
 1104 00f2 13       		.uleb128 0x13
 1105 00f3 02       		.uleb128 0x2
 1106 00f4 17       		.uleb128 0x17
 1107 00f5 00       		.byte	0
 1108 00f6 00       		.byte	0
 1109 00f7 0F       		.uleb128 0xf
 1110 00f8 898201   		.uleb128 0x4109
 1111 00fb 01       		.byte	0x1
 1112 00fc 11       		.uleb128 0x11
 1113 00fd 01       		.uleb128 0x1
 1114 00fe 31       		.uleb128 0x31
 1115 00ff 13       		.uleb128 0x13
 1116 0100 01       		.uleb128 0x1
 1117 0101 13       		.uleb128 0x13
 1118 0102 00       		.byte	0
 1119 0103 00       		.byte	0
 1120 0104 10       		.uleb128 0x10
 1121 0105 8A8201   		.uleb128 0x410a
 1122 0108 00       		.byte	0
 1123 0109 02       		.uleb128 0x2
 1124 010a 18       		.uleb128 0x18
 1125 010b 9142     		.uleb128 0x2111
 1126 010d 18       		.uleb128 0x18
 1127 010e 00       		.byte	0
 1128 010f 00       		.byte	0
 1129 0110 11       		.uleb128 0x11
 1130 0111 34       		.uleb128 0x34
 1131 0112 00       		.byte	0
 1132 0113 03       		.uleb128 0x3
 1133 0114 0E       		.uleb128 0xe
 1134 0115 3A       		.uleb128 0x3a
 1135 0116 0B       		.uleb128 0xb
 1136 0117 3B       		.uleb128 0x3b
 1137 0118 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 37


 1138 0119 49       		.uleb128 0x49
 1139 011a 13       		.uleb128 0x13
 1140 011b 3F       		.uleb128 0x3f
 1141 011c 19       		.uleb128 0x19
 1142 011d 02       		.uleb128 0x2
 1143 011e 18       		.uleb128 0x18
 1144 011f 00       		.byte	0
 1145 0120 00       		.byte	0
 1146 0121 12       		.uleb128 0x12
 1147 0122 2E       		.uleb128 0x2e
 1148 0123 00       		.byte	0
 1149 0124 3F       		.uleb128 0x3f
 1150 0125 19       		.uleb128 0x19
 1151 0126 03       		.uleb128 0x3
 1152 0127 0E       		.uleb128 0xe
 1153 0128 3A       		.uleb128 0x3a
 1154 0129 0B       		.uleb128 0xb
 1155 012a 3B       		.uleb128 0x3b
 1156 012b 0B       		.uleb128 0xb
 1157 012c 27       		.uleb128 0x27
 1158 012d 19       		.uleb128 0x19
 1159 012e 49       		.uleb128 0x49
 1160 012f 13       		.uleb128 0x13
 1161 0130 3C       		.uleb128 0x3c
 1162 0131 19       		.uleb128 0x19
 1163 0132 00       		.byte	0
 1164 0133 00       		.byte	0
 1165 0134 13       		.uleb128 0x13
 1166 0135 2E       		.uleb128 0x2e
 1167 0136 01       		.byte	0x1
 1168 0137 3F       		.uleb128 0x3f
 1169 0138 19       		.uleb128 0x19
 1170 0139 03       		.uleb128 0x3
 1171 013a 0E       		.uleb128 0xe
 1172 013b 3A       		.uleb128 0x3a
 1173 013c 0B       		.uleb128 0xb
 1174 013d 3B       		.uleb128 0x3b
 1175 013e 0B       		.uleb128 0xb
 1176 013f 27       		.uleb128 0x27
 1177 0140 19       		.uleb128 0x19
 1178 0141 3C       		.uleb128 0x3c
 1179 0142 19       		.uleb128 0x19
 1180 0143 00       		.byte	0
 1181 0144 00       		.byte	0
 1182 0145 14       		.uleb128 0x14
 1183 0146 05       		.uleb128 0x5
 1184 0147 00       		.byte	0
 1185 0148 49       		.uleb128 0x49
 1186 0149 13       		.uleb128 0x13
 1187 014a 00       		.byte	0
 1188 014b 00       		.byte	0
 1189 014c 00       		.byte	0
 1190              		.section	.debug_loc,"",%progbits
 1191              	.Ldebug_loc0:
 1192              	.LLST0:
 1193 0000 0A000000 		.4byte	.LVL8
 1194 0004 0E000000 		.4byte	.LVL9
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 38


 1195 0008 0100     		.2byte	0x1
 1196 000a 53       		.byte	0x53
 1197 000b 00000000 		.4byte	0
 1198 000f 00000000 		.4byte	0
 1199              	.LLST1:
 1200 0013 36000000 		.4byte	.LVL14
 1201 0017 41000000 		.4byte	.LVL15-1
 1202 001b 0100     		.2byte	0x1
 1203 001d 50       		.byte	0x50
 1204 001e 00000000 		.4byte	0
 1205 0022 00000000 		.4byte	0
 1206              		.section	.debug_aranges,"",%progbits
 1207 0000 94000000 		.4byte	0x94
 1208 0004 0200     		.2byte	0x2
 1209 0006 00000000 		.4byte	.Ldebug_info0
 1210 000a 04       		.byte	0x4
 1211 000b 00       		.byte	0
 1212 000c 0000     		.2byte	0
 1213 000e 0000     		.2byte	0
 1214 0010 00000000 		.4byte	.LFB4
 1215 0014 10000000 		.4byte	.LFE4-.LFB4
 1216 0018 00000000 		.4byte	.LFB5
 1217 001c 10000000 		.4byte	.LFE5-.LFB5
 1218 0020 00000000 		.4byte	.LFB6
 1219 0024 0C000000 		.4byte	.LFE6-.LFB6
 1220 0028 00000000 		.4byte	.LFB7
 1221 002c 14000000 		.4byte	.LFE7-.LFB7
 1222 0030 00000000 		.4byte	.LFB9
 1223 0034 0C000000 		.4byte	.LFE9-.LFB9
 1224 0038 00000000 		.4byte	.LFB10
 1225 003c 0C000000 		.4byte	.LFE10-.LFB10
 1226 0040 00000000 		.4byte	.LFB11
 1227 0044 0C000000 		.4byte	.LFE11-.LFB11
 1228 0048 00000000 		.4byte	.LFB12
 1229 004c 0C000000 		.4byte	.LFE12-.LFB12
 1230 0050 00000000 		.4byte	.LFB13
 1231 0054 0C000000 		.4byte	.LFE13-.LFB13
 1232 0058 00000000 		.4byte	.LFB14
 1233 005c 0C000000 		.4byte	.LFE14-.LFB14
 1234 0060 00000000 		.4byte	.LFB15
 1235 0064 0C000000 		.4byte	.LFE15-.LFB15
 1236 0068 00000000 		.4byte	.LFB8
 1237 006c 12000000 		.4byte	.LFE8-.LFB8
 1238 0070 00000000 		.4byte	.LFB3
 1239 0074 50000000 		.4byte	.LFE3-.LFB3
 1240 0078 00000000 		.4byte	.LFB2
 1241 007c 20000000 		.4byte	.LFE2-.LFB2
 1242 0080 00000000 		.4byte	.LFB16
 1243 0084 0C000000 		.4byte	.LFE16-.LFB16
 1244 0088 00000000 		.4byte	.LFB17
 1245 008c 0C000000 		.4byte	.LFE17-.LFB17
 1246 0090 00000000 		.4byte	0
 1247 0094 00000000 		.4byte	0
 1248              		.section	.debug_ranges,"",%progbits
 1249              	.Ldebug_ranges0:
 1250 0000 00000000 		.4byte	.LFB4
 1251 0004 10000000 		.4byte	.LFE4
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 39


 1252 0008 00000000 		.4byte	.LFB5
 1253 000c 10000000 		.4byte	.LFE5
 1254 0010 00000000 		.4byte	.LFB6
 1255 0014 0C000000 		.4byte	.LFE6
 1256 0018 00000000 		.4byte	.LFB7
 1257 001c 14000000 		.4byte	.LFE7
 1258 0020 00000000 		.4byte	.LFB9
 1259 0024 0C000000 		.4byte	.LFE9
 1260 0028 00000000 		.4byte	.LFB10
 1261 002c 0C000000 		.4byte	.LFE10
 1262 0030 00000000 		.4byte	.LFB11
 1263 0034 0C000000 		.4byte	.LFE11
 1264 0038 00000000 		.4byte	.LFB12
 1265 003c 0C000000 		.4byte	.LFE12
 1266 0040 00000000 		.4byte	.LFB13
 1267 0044 0C000000 		.4byte	.LFE13
 1268 0048 00000000 		.4byte	.LFB14
 1269 004c 0C000000 		.4byte	.LFE14
 1270 0050 00000000 		.4byte	.LFB15
 1271 0054 0C000000 		.4byte	.LFE15
 1272 0058 00000000 		.4byte	.LFB8
 1273 005c 12000000 		.4byte	.LFE8
 1274 0060 00000000 		.4byte	.LFB3
 1275 0064 50000000 		.4byte	.LFE3
 1276 0068 00000000 		.4byte	.LFB2
 1277 006c 20000000 		.4byte	.LFE2
 1278 0070 00000000 		.4byte	.LFB16
 1279 0074 0C000000 		.4byte	.LFE16
 1280 0078 00000000 		.4byte	.LFB17
 1281 007c 0C000000 		.4byte	.LFE17
 1282 0080 00000000 		.4byte	0
 1283 0084 00000000 		.4byte	0
 1284              		.section	.debug_line,"",%progbits
 1285              	.Ldebug_line0:
 1286 0000 8E010000 		.section	.debug_str,"MS",%progbits,1
 1286      02004F00 
 1286      00000201 
 1286      FB0E0D00 
 1286      01010101 
 1287              	.LASF6:
 1288 0000 6C6F6E67 		.ascii	"long long int\000"
 1288      206C6F6E 
 1288      6720696E 
 1288      7400
 1289              	.LASF41:
 1290 000e 50574D5F 		.ascii	"PWM_2_ReadControlRegister\000"
 1290      325F5265 
 1290      6164436F 
 1290      6E74726F 
 1290      6C526567 
 1291              	.LASF11:
 1292 0028 63686172 		.ascii	"char\000"
 1292      00
 1293              	.LASF36:
 1294 002d 50574D5F 		.ascii	"PWM_2_ReadCompare\000"
 1294      325F5265 
 1294      6164436F 
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 40


 1294      6D706172 
 1294      6500
 1295              	.LASF32:
 1296 003f 72657375 		.ascii	"result\000"
 1296      6C7400
 1297              	.LASF39:
 1298 0046 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_2.c\000"
 1298      6E657261 
 1298      7465645F 
 1298      536F7572 
 1298      63655C50 
 1299              	.LASF20:
 1300 0067 70657269 		.ascii	"period\000"
 1300      6F6400
 1301              	.LASF3:
 1302 006e 73686F72 		.ascii	"short unsigned int\000"
 1302      7420756E 
 1302      7369676E 
 1302      65642069 
 1302      6E7400
 1303              	.LASF16:
 1304 0081 50574D5F 		.ascii	"PWM_2_Stop\000"
 1304      325F5374 
 1304      6F7000
 1305              	.LASF29:
 1306 008c 50574D5F 		.ascii	"PWM_2_ReadCapture\000"
 1306      325F5265 
 1306      61644361 
 1306      70747572 
 1306      6500
 1307              	.LASF9:
 1308 009e 666C6F61 		.ascii	"float\000"
 1308      7400
 1309              	.LASF19:
 1310 00a4 636F756E 		.ascii	"counter\000"
 1310      74657200 
 1311              	.LASF7:
 1312 00ac 6C6F6E67 		.ascii	"long long unsigned int\000"
 1312      206C6F6E 
 1312      6720756E 
 1312      7369676E 
 1312      65642069 
 1313              	.LASF1:
 1314 00c3 756E7369 		.ascii	"unsigned char\000"
 1314      676E6564 
 1314      20636861 
 1314      7200
 1315              	.LASF13:
 1316 00d1 72656738 		.ascii	"reg8\000"
 1316      00
 1317              	.LASF5:
 1318 00d6 6C6F6E67 		.ascii	"long unsigned int\000"
 1318      20756E73 
 1318      69676E65 
 1318      6420696E 
 1318      7400
 1319              	.LASF12:
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 41


 1320 00e8 75696E74 		.ascii	"uint8\000"
 1320      3800
 1321              	.LASF28:
 1322 00ee 636F6E74 		.ascii	"control\000"
 1322      726F6C00 
 1323              	.LASF27:
 1324 00f6 50574D5F 		.ascii	"PWM_2_WriteControlRegister\000"
 1324      325F5772 
 1324      69746543 
 1324      6F6E7472 
 1324      6F6C5265 
 1325              	.LASF25:
 1326 0111 50574D5F 		.ascii	"PWM_2_ReadCounter\000"
 1326      325F5265 
 1326      6164436F 
 1326      756E7465 
 1326      7200
 1327              	.LASF10:
 1328 0123 646F7562 		.ascii	"double\000"
 1328      6C6500
 1329              	.LASF35:
 1330 012a 50574D5F 		.ascii	"PWM_2_Start\000"
 1330      325F5374 
 1330      61727400 
 1331              	.LASF21:
 1332 0136 50574D5F 		.ascii	"PWM_2_WriteCompare\000"
 1332      325F5772 
 1332      69746543 
 1332      6F6D7061 
 1332      726500
 1333              	.LASF8:
 1334 0149 756E7369 		.ascii	"unsigned int\000"
 1334      676E6564 
 1334      20696E74 
 1334      00
 1335              	.LASF17:
 1336 0156 50574D5F 		.ascii	"PWM_2_WriteCounter\000"
 1336      325F5772 
 1336      69746543 
 1336      6F756E74 
 1336      657200
 1337              	.LASF44:
 1338 0169 43794578 		.ascii	"CyExitCriticalSection\000"
 1338      69744372 
 1338      69746963 
 1338      616C5365 
 1338      6374696F 
 1339              	.LASF26:
 1340 017f 50574D5F 		.ascii	"PWM_2_ReadStatusRegister\000"
 1340      325F5265 
 1340      61645374 
 1340      61747573 
 1340      52656769 
 1341              	.LASF43:
 1342 0198 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1342      74657243 
 1342      72697469 
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 42


 1342      63616C53 
 1342      65637469 
 1343              	.LASF33:
 1344 01af 6374726C 		.ascii	"ctrl\000"
 1344      00
 1345              	.LASF14:
 1346 01b4 73697A65 		.ascii	"sizetype\000"
 1346      74797065 
 1346      00
 1347              	.LASF18:
 1348 01bd 50574D5F 		.ascii	"PWM_2_WritePeriod\000"
 1348      325F5772 
 1348      69746550 
 1348      6572696F 
 1348      6400
 1349              	.LASF24:
 1350 01cf 696E7465 		.ascii	"interruptMode\000"
 1350      72727570 
 1350      744D6F64 
 1350      6500
 1351              	.LASF34:
 1352 01dd 50574D5F 		.ascii	"PWM_2_interruptState\000"
 1352      325F696E 
 1352      74657272 
 1352      75707453 
 1352      74617465 
 1353              	.LASF38:
 1354 01f2 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1354      4320342E 
 1354      392E3320 
 1354      32303135 
 1354      30333033 
 1355 0225 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1355      20726576 
 1355      6973696F 
 1355      6E203232 
 1355      31323230 
 1356 0258 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1356      66756E63 
 1356      74696F6E 
 1356      2D736563 
 1356      74696F6E 
 1357              	.LASF23:
 1358 0280 50574D5F 		.ascii	"PWM_2_SetInterruptMode\000"
 1358      325F5365 
 1358      74496E74 
 1358      65727275 
 1358      70744D6F 
 1359              	.LASF2:
 1360 0297 73686F72 		.ascii	"short int\000"
 1360      7420696E 
 1360      7400
 1361              	.LASF30:
 1362 02a1 50574D5F 		.ascii	"PWM_2_ClearFIFO\000"
 1362      325F436C 
 1362      65617246 
 1362      49464F00 
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\cc7EPQ1Z.s 			page 43


 1363              	.LASF15:
 1364 02b1 50574D5F 		.ascii	"PWM_2_Enable\000"
 1364      325F456E 
 1364      61626C65 
 1364      00
 1365              	.LASF40:
 1366 02be 433A5C55 		.ascii	"C:\\Users\\Rafael\\Documents\\PSoC Creator\\Workspa"
 1366      73657273 
 1366      5C526166 
 1366      61656C5C 
 1366      446F6375 
 1367 02ec 63653031 		.ascii	"ce01\\MicroFluidics.cydsn\000"
 1367      5C4D6963 
 1367      726F466C 
 1367      75696469 
 1367      63732E63 
 1368              	.LASF4:
 1369 0305 6C6F6E67 		.ascii	"long int\000"
 1369      20696E74 
 1369      00
 1370              	.LASF37:
 1371 030e 50574D5F 		.ascii	"PWM_2_ReadPeriod\000"
 1371      325F5265 
 1371      61645065 
 1371      72696F64 
 1371      00
 1372              	.LASF31:
 1373 031f 50574D5F 		.ascii	"PWM_2_Init\000"
 1373      325F496E 
 1373      697400
 1374              	.LASF0:
 1375 032a 7369676E 		.ascii	"signed char\000"
 1375      65642063 
 1375      68617200 
 1376              	.LASF22:
 1377 0336 636F6D70 		.ascii	"compare\000"
 1377      61726500 
 1378              	.LASF42:
 1379 033e 50574D5F 		.ascii	"PWM_2_initVar\000"
 1379      325F696E 
 1379      69745661 
 1379      7200
 1380              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
